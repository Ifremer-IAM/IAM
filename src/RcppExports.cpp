// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// IAM_stripe
List IAM_stripe(List listInput, List listSpec, List listStochastic, List listScen, IntegerVector RecType1, IntegerVector RecType2, IntegerVector RecType3, IntegerVector Scenarii, IntegerVector Bootstrp, IntegerVector nbBoot, IntegerVector GestInd, NumericVector mOth, NumericVector bounds, List TAC, NumericVector FBAR, List othSpSup, NumericVector effSup, IntegerVector GestParam, NumericVector EcoDcf, NumericVector persCalc, NumericVector dr, IntegerVector SRind, List listSR, List TypeSR, NumericVector mFM, List TACbyF, List Ftarg, List W_Ftarg, List MeanRec_Ftarg, List parBHV, List parQEX, List tacCTRL, List stochPrice, IntegerVector updateE, List parOQD, CharacterVector bootVar, IntegerVector verbose);
RcppExport SEXP _IAM_IAM_stripe(SEXP listInputSEXP, SEXP listSpecSEXP, SEXP listStochasticSEXP, SEXP listScenSEXP, SEXP RecType1SEXP, SEXP RecType2SEXP, SEXP RecType3SEXP, SEXP ScenariiSEXP, SEXP BootstrpSEXP, SEXP nbBootSEXP, SEXP GestIndSEXP, SEXP mOthSEXP, SEXP boundsSEXP, SEXP TACSEXP, SEXP FBARSEXP, SEXP othSpSupSEXP, SEXP effSupSEXP, SEXP GestParamSEXP, SEXP EcoDcfSEXP, SEXP persCalcSEXP, SEXP drSEXP, SEXP SRindSEXP, SEXP listSRSEXP, SEXP TypeSRSEXP, SEXP mFMSEXP, SEXP TACbyFSEXP, SEXP FtargSEXP, SEXP W_FtargSEXP, SEXP MeanRec_FtargSEXP, SEXP parBHVSEXP, SEXP parQEXSEXP, SEXP tacCTRLSEXP, SEXP stochPriceSEXP, SEXP updateESEXP, SEXP parOQDSEXP, SEXP bootVarSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type listInput(listInputSEXP);
    Rcpp::traits::input_parameter< List >::type listSpec(listSpecSEXP);
    Rcpp::traits::input_parameter< List >::type listStochastic(listStochasticSEXP);
    Rcpp::traits::input_parameter< List >::type listScen(listScenSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type RecType1(RecType1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type RecType2(RecType2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type RecType3(RecType3SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type Scenarii(ScenariiSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type Bootstrp(BootstrpSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type nbBoot(nbBootSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type GestInd(GestIndSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mOth(mOthSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type bounds(boundsSEXP);
    Rcpp::traits::input_parameter< List >::type TAC(TACSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type FBAR(FBARSEXP);
    Rcpp::traits::input_parameter< List >::type othSpSup(othSpSupSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type effSup(effSupSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type GestParam(GestParamSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type EcoDcf(EcoDcfSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type persCalc(persCalcSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dr(drSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type SRind(SRindSEXP);
    Rcpp::traits::input_parameter< List >::type listSR(listSRSEXP);
    Rcpp::traits::input_parameter< List >::type TypeSR(TypeSRSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mFM(mFMSEXP);
    Rcpp::traits::input_parameter< List >::type TACbyF(TACbyFSEXP);
    Rcpp::traits::input_parameter< List >::type Ftarg(FtargSEXP);
    Rcpp::traits::input_parameter< List >::type W_Ftarg(W_FtargSEXP);
    Rcpp::traits::input_parameter< List >::type MeanRec_Ftarg(MeanRec_FtargSEXP);
    Rcpp::traits::input_parameter< List >::type parBHV(parBHVSEXP);
    Rcpp::traits::input_parameter< List >::type parQEX(parQEXSEXP);
    Rcpp::traits::input_parameter< List >::type tacCTRL(tacCTRLSEXP);
    Rcpp::traits::input_parameter< List >::type stochPrice(stochPriceSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type updateE(updateESEXP);
    Rcpp::traits::input_parameter< List >::type parOQD(parOQDSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type bootVar(bootVarSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(IAM_stripe(listInput, listSpec, listStochastic, listScen, RecType1, RecType2, RecType3, Scenarii, Bootstrp, nbBoot, GestInd, mOth, bounds, TAC, FBAR, othSpSup, effSup, GestParam, EcoDcf, persCalc, dr, SRind, listSR, TypeSR, mFM, TACbyF, Ftarg, W_Ftarg, MeanRec_Ftarg, parBHV, parQEX, tacCTRL, stochPrice, updateE, parOQD, bootVar, verbose));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_IAM_IAM_stripe", (DL_FUNC) &_IAM_IAM_stripe, 37},
    {NULL, NULL, 0}
};

RcppExport void R_init_IAM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
