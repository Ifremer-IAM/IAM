[{"path":"/articles/Gestion_TAC.html","id":"scénario-statu-quo","dir":"Articles","previous_headings":"","what":"Scénario statu quo","title":"Gestion avec TAC (fr)","text":"Afin de pouvoir comparer l’effet de chaque scénario, il nous faut un scénario de départ dans lequel aucune mesure de Gestion s’imposera. Dans un premier temps il est utile de définir les dynamiques de recrutements ainsi que des éléments de paramétrage du module économique. va pour cela éditer l’objet IAM_argum_2009. Les scénarios sont simulés avec \\(N\\) réplicats, correspondant à la variabilité du recrutement. Les valeurs de \\(N\\), \\(F_{msy}\\) pour l’espèce COR et \\(TAC\\) sont fixées ici : La simulation du scénario Statu Quo est codée comme suit :","code":"# Module SR # Add noise to COR recruitment IAM_argum_2009@arguments$Recruitment$COR$wnNOISEmodSR <- 0.203 IAM_argum_2009@arguments$Recruitment$COR$noiseTypeSR <- 2 # Log-normal IAM_argum_2009@arguments$Recruitment$COR$typeMODsr <- \"Hockey-Stick\" IAM_argum_2009@arguments$Recruitment$COR$parAmodSR <- 2539.5 IAM_argum_2009@arguments$Recruitment$COR$parBmodSR <- 9679  # Module EcoDCF IAM_argum_2009 <- IAM.editArgs_Eco(IAM_argum_2009, dr = 0.04, perscCalc = 1)  # Module Gestion mfm <- with(IAM_input_2009@input$Fleet,{   (effort1_f_m * effort2_f_m * nbv_f_m) / as.vector(effort1_f * effort2_f * nbv_f) }) mfm[is.na(mfm)] <- 0  IAM_argum_2009 <- IAM.editArgs_Gest(IAM_argum_2009, active = FALSE,                                     delay = 1, mfm = mfm)  # Module Scenario IAM_argum_2009 <- IAM.editArgs_Scenar(IAM_argum_2009) # desactivate scenario  summary(IAM_argum_2009) #> My Input (IAM argument) : #> Simulation of 3 dynamic species, 19 static species and 7 fleet #> Simulation start in 2009 and end in 2020 (12 steps) #>  #> ======================================================================================= #>   SR module  |               Stock Recruitment             |      Noise       | Proba | #> --------------------------------------------------------------------------------------- #>     Species  |    function  :  param A ; param B ; param C |  Type :    sd    |  Type | #>    ARC (XSA) |          Mean 3.641e+07  0.00e+00  0.00e+00 |  Norm | 0.00e+00 |   .   | #>    COR (XSA) |  Hockey-Stick 2.540e+03  9.68e+03  0.00e+00 |  LogN | 2.03e-01 |   .   | #>    DAR (SS3) | not activated 0.000e+00  0.00e+00  0.00e+00 |  Norm | 0.00e+00 |   .   | #> --------------------------------------------------------------------------------------- #>  #>  The Gestion module is not active. #>  #> ============================================================ #> Economic : PerscCalc = 1 ; dr = 0.040 | No replicates      | #> ------------------------------------------------------------ #>  #>  The Scenario module is not active. N <- 5 Fmsy <- 0.26 TAC <- 3600 # Statu quo SQ <- replicate(N, {   IAM::IAM.model(objArgs = IAM_argum_2009,  objInput = IAM_input_2009) })"},{"path":"/articles/Gestion_TAC.html","id":"gestion-tac-générale","dir":"Articles","previous_headings":"","what":"Gestion TAC générale","title":"Gestion avec TAC (fr)","text":"Les différentes options de réglages du module Gestion sont exposées dans la vignette “Utilisation IAM dans R”. Il s’agit ici de les explorer plus en avant et de les utiliser. fixe ici un scénario de Gestion qui va agir sur les efforts (nombre de navires ou nombre de voyages) afin d’atteindre un TAC (Total allowable catches) donné pour chaque année. Ce quotas vise particulièrement l’espèce dite “COR” et rentre en application 2 ans après le début de la simulation, soit en 2011. Les modification d’efforts seront multiplicatives. Concernant la recherche de réduction d’effort, une recherche d’optimum se fait par itération afin de trouver le multiplicateur \\(\\mu\\) tel que la différence entre le TAC requis et atteins est minimale. Le maximum d’itération est de 10, et peut s’arrêter avant si la différence est inférieur à une tolérance donnée. La recherche de ce \\(\\mu\\) se fait dans un intervalle donné dans les paramètres (nommé bounds). Cet interval dépend fortement du type de Gestion utilisé. En effet, essaye d’atteindre un effort \\(var_c\\) à partir d’un effort initial \\(var_i\\) par l’application de \\(\\mu\\) sur la matrice \\(m_{f,m}\\) comme illustré dans les équations suivantes. Cependant, le modèle va venir s’assurer que \\(var_c\\) ne devient pas négatif et assigner la valeur 0 dans ce cas précis. Afin de limiter les temps de calculs, il est donc préférable de chercher \\(\\mu\\) dans les intervals suivants : Il est également important de noter qu’un interval \\([0;0]\\) revient à ne pas appliquer le module Gestion. Cette simulation permet de diminuer drastiquement la mortalite par pêche de l’espèce dite “COR” avec une reduction immédiate la taille des flottilles. Il s’agit de la capacité de pêche. Une autre variable d’ajustement de l’effort est le nombre voyage en mer des navires. parle d’effort de pêche.","code":"IAM_argum_2009_TACnbv <- IAM.editArgs_Gest(   IAM_argum_2009, active = TRUE, control = \"Nb vessels\", target = \"TAC\",   espece = \"COR\", delay = 2,   type = \"x\", bounds = c(1e3, -100),    tac = c(NA, NA, rep(TAC, 10)))       #   84, 85,     2011:1995  sim_TACglob_nbv <- pbreplicate(N, {   IAM::IAM.model(objArgs = IAM_argum_2009_TACnbv,                    objInput = IAM_input_2009) }) IAM_argum_2009_TACnbds <- IAM.editArgs_Gest(   IAM_argum_2009_TACnbv, active = TRUE, control = \"Nb trips\" )  sim_TACglob_nbt <- pbreplicate(N, {   IAM::IAM.model(objArgs = IAM_argum_2009_TACnbds,                    objInput = IAM_input_2009) })"},{"path":"/articles/Gestion_TAC.html","id":"représentations-graphiques","dir":"Articles","previous_headings":"Gestion TAC générale","what":"Représentations graphiques","title":"Gestion avec TAC (fr)","text":"peut aisement comparer les différents scénarios avec des fonctions graphiques. Pour cela il faut tout d’abord simplifier les sorties sous format de tableau. Cela est réalisable avec la fonction IAM.format(). La fonction IAM.format_quant va quand à elle permettre de ne récupérer que les quartiles et la médiane de nos N simulations. Une fois les données formatées, peut aisément comparer les différents scénarios de TACS. Ainsi, la mise en place d’un TAC va venir diminuer la mortalité par pêche (Fbar) sur le stock visé. COR variables global TAC gestion. 5 runs. Cependant, ces scénarios entrainent de fortes réductions d’effort car ils ne ciblent pas les métiers et flottilles impactant le plus le stock cible. Ainsi observe que les variables ajustées lors des scénarios arrivent vite proche de valeurs nulles. Pour rappel effort1 et effort2 correspondent respectivement à nbTrip et tripLgth. Effort variables global TAC gestion. 5 runs.","code":"TACglob_nbv <- lapply(1:N,  function(x) {   IAM.format(sim_TACglob_nbv[[x]], name = \"summary\",              sim_name = \"TAC capacité de pêche\", n = x) })  TACglob_nbt <- lapply(1:N,  function(x) {   IAM.format(sim_TACglob_nbt[[x]], name = \"summary\",               sim_name = \"TAC effort de pêche\", n = x) })  Statuquo <- lapply(1:N,  function(x) {   IAM.format(SQ[[x]], name = \"summary\",               sim_name = \"Statu quo\", n = x) })   TACglob_quant <- do.call(rbind, c(Statuquo, TACglob_nbt, TACglob_nbv)) %>%   IAM.format_quant(., probs = c(.025, .975)) TACglob_quant %>%   filter(species == \"COR\", variable %in% c(\"Fbar\", \"SSB\", \"L_et\")) %>%      ggplot(aes(x = year, y = median)) +    facet_grid(variable ~ sim_name, scales = \"free_y\") +   geom_ribbon(aes(ymin = quant1, ymax = quant2), fill = \"white\", alpha = .4) +   geom_line() + geom_point(size = .5) +   geom_line(aes(y = value), linetype = \"dotted\") +   geom_vline(xintercept=2011, linetype = \"dotted\") +   guides(x = guide_axis(angle = 90)) + IAM_theme() +   NULL TACglob_quant %>%   filter(variable %in% c(\"nbv_f\", \"effort1_f\")) %>%   ggplot(aes(x = year, y = value, color = fleet )) +   facet_grid(variable ~ sim_name, scales = \"free_y\") +   geom_line() +   geom_vline(xintercept=2011, linetype = \"dotted\") +   theme(legend.position = \"bottom\") +   NULL"},{"path":"/articles/Gestion_TAC.html","id":"pondérer-les-efforts-avec-la-matrice-mfm","dir":"Articles","previous_headings":"Gestion TAC générale","what":"Pondérer les efforts avec la matrice mfm","title":"Gestion avec TAC (fr)","text":"Ces réductions drastiques peuvent être limitées en ciblant les flottilles et les métiers. Par exemple, l’espèce ciblé est pêchées à 97.0259956 % par la flottille dite “Thalassa”, via le métier “Filet_COR”. Il serait donc plus intéressant de diminuer l’effort sur cette flottille uniquement. Pour cela peut agir sur la pondération des métiers et indiquer que l’diminiue l’effort des métiers “Filet_COR” pour les flottilles qui l’utilisent au profit du méthier “Filet_DP”. Il s’agit d’un report d’effort par métier. Il est tout à fait possible de rajouter aux précédents scénrarios déjà simulés pour avoir un moyen de comparaison. Il faut cependant éviter de rajouter les objets à la suite avec rbind comme cela, car R utilise beaucoup plus de mémoire. La comparaison montre une dimension du Fbar sur l’espèce cible COR. COR variables global TAC gestion effort report Filet_COR Filet_DP. 5 runs. Sur le graphe des efforts par flottilles, il est facilement notable que les efforts ne sont pas aussi drastiquement impactés.  Il est bien entendu évident que les impacts de ce TAC seront persceptibles sur d’autres variables économiques.","code":"trg_f <- c(\"Thalassa\", \"Haliotis\")  mfm <- with(IAM_input_2009@input$Fleet,{   (effort1_f_m * effort2_f_m * nbv_f_m) /      as.vector(effort1_f * effort2_f * nbv_f) }) mfm[!is.na(mfm)] <- 0 #report d'effort du m?tier 'Filet_COR' vers 'Filet_DP' mfm[trg_f,\"Filet_DP\"] <- with(IAM_input_2009@input$Fleet,       Lref_f_m[trg_f,\"Filet_DP\"] / sum(Lref_f_m[trg_f,\"Filet_DP\"]) ) mfm[trg_f,\"Filet_COR\"] <- with(IAM_input_2009@input$Fleet,      - Lref_f_m[trg_f,\"Filet_DP\"] / sum(Lref_f_m[trg_f,\"Filet_DP\"]) ) print(mfm) #>                 Filet_DAR   Filet_DP Chalut_fond_DP Chalut_fond_GLY #> Alis                    0 0.00000000             NA              NA #> Antea                  NA         NA              0               0 #> Atalante               NA         NA              0              NA #> Haliotis               NA 0.05556576             NA              NA #> Marion_Dufresne        NA         NA             NA              NA #> Pourquoi_pas           NA         NA             NA              NA #> Thalassa                0 0.94443424             NA              NA #>                 Chalut_fond_CEP Chalut_pelagique_DP Chalut_fond_COR Autres #> Alis                         NA                  NA              NA     NA #> Antea                        NA                  NA              NA     NA #> Atalante                      0                   0               0      0 #> Haliotis                     NA                  NA              NA      0 #> Marion_Dufresne              NA                  NA              NA     NA #> Pourquoi_pas                 NA                  NA              NA     NA #> Thalassa                     NA                  NA              NA      0 #>                   Filet_COR Palangre_DP Palangre_DAR #> Alis                     NA          NA           NA #> Antea                    NA          NA           NA #> Atalante                 NA          NA           NA #> Haliotis        -0.05556576           0           NA #> Marion_Dufresne          NA          NA            0 #> Pourquoi_pas             NA           0            0 #> Thalassa        -0.94443424          NA           NA #> attr(,\"DimCst\") #> [1]  7 11  0  0  IAM_argum_2009_TACnbvR <- IAM.editArgs_Gest(IAM_argum_2009_TACnbv,                                              mfm = mfm, control = \"Nb trips\")  sim_TACglob_nbvR <- pbreplicate(N, {   sim_TACreport <- IAM::IAM.model(objArgs = IAM_argum_2009_TACnbvR,                                    objInput = IAM_input_2009) }) # Extraction des variables. TACglob_nbvR <- lapply(1:N,  function(x) {   IAM.format(sim_TACglob_nbvR[[x]], name = c(\"summary\", \"GP\"),              sim_name = \"Report TAC global nbds\", n = x) }) # Calcul des quantiles et ajout aux simulations précédentes. TACglob_quantR <- do.call(rbind, c(TACglob_nbvR)) %>%   IAM.format_quant(., probs = c(.025, .975)) %>%   rbind(., TACglob_quant) %>%   mutate(sim_name = factor(sim_name, levels = c( # Reorder the column in plot     \"Statu quo\", \"TAC global nbtrip\",            # by setting level order     \"TAC global nbv\", \"Report TAC global nbds\"))) TACglob_quantR %>%   filter(species == \"COR\", variable %in% c(\"Fbar\", \"SSB\", \"L_et\")) %>%   ggplot(aes(x = year, y = median)) +    facet_grid(variable ~ sim_name, scales = \"free_y\") +   geom_ribbon(aes(ymin = quant1, ymax = quant2), fill = \"white\",alpha = .4) +   geom_line() + geom_point(size = .5) +   geom_line(aes(y = value), linetype = \"dotted\") +   geom_vline(xintercept=2011, linetype = \"dotted\") +   guides(x = guide_axis(angle = 90)) + IAM_theme() +   NULL TACglob_quantR %>%   filter(variable %in% c(\"nbv_f\", \"effort1_f\")) %>%   ggplot(aes(x = year, y = value, color = fleet )) +   facet_grid(variable ~ sim_name, scales = \"free_y\") +   geom_line() +   geom_vline(xintercept=2011, linetype = \"dotted\") +   NULL"},{"path":"/articles/Target_Fmsy.html","id":"scénario-statu-quo","dir":"Articles","previous_headings":"","what":"Scénario statu quo","title":"Scénarios TAC, quotas et transition Fmsy","text":"Afin de pouvoir comparer l’effet de chaque scénario, il nous faut un scénario de départ dans lequel les mesures de Gestion ne s’imposeront pas. Dans un premier temps, les dynamiques de recrutements ainsi que des éléments de paramétrage du module économique sont définies. va pour cela éditer l’objet IAM_argum_2009.","code":"# Module SR # Add noise to COR recruitment IAM_argum_2009@arguments$Recruitment$COR$wnNOISEmodSR <- 0.203 IAM_argum_2009@arguments$Recruitment$COR$noiseTypeSR <- 2 # Log-normal IAM_argum_2009@arguments$Recruitment$COR$typeMODsr <- \"Hockey-Stick\" IAM_argum_2009@arguments$Recruitment$COR$parAmodSR <- 2539.5 IAM_argum_2009@arguments$Recruitment$COR$parBmodSR <- 9679  # Module EcoDCF IAM_argum_2009 <- IAM.editArgs_Eco(IAM_argum_2009, dr = 0.04, perscCalc = 1)  # Module Gestion mfm <- with(IAM_input_2009@input$Fleet,{   (effort1_f_m * effort2_f_m * nbv_f_m) / as.vector(effort1_f * effort2_f * nbv_f) }) mfm[is.na(mfm)] <- 0  IAM_argum_2009 <- IAM.editArgs_Gest(IAM_argum_2009, active = FALSE,                                     delay = 1, mfm = mfm)  # Module Scenario IAM_argum_2009 <- IAM.editArgs_Scenar(IAM_argum_2009) # desactivate scenario  summary(IAM_argum_2009) #> My Input (IAM argument) : #> Simulation of 3 dynamic species, 19 static species and 7 fleet #> Simulation start in 2009 and end in 2020 (12 steps) #>  #> ======================================================================================= #>   SR module  |               Stock Recruitment             |      Noise       | Proba | #> --------------------------------------------------------------------------------------- #>     Species  |    function  :  param A ; param B ; param C |  Type :    sd    |  Type | #>    ARC (XSA) |          Mean 3.641e+07  0.00e+00  0.00e+00 |  Norm | 0.00e+00 |   .   | #>    COR (XSA) |  Hockey-Stick 2.540e+03  9.68e+03  0.00e+00 |  LogN | 2.03e-01 |   .   | #>    DAR (SS3) | not activated 0.000e+00  0.00e+00  0.00e+00 |  Norm | 0.00e+00 |   .   | #> --------------------------------------------------------------------------------------- #>  #>  The Gestion module is not active. #>  #> ============================================================ #> Economic : PerscCalc = 1 ; dr = 0.040 | No replicates      | #> ------------------------------------------------------------ #>  #>  The Scenario module is not active."},{"path":"/articles/Target_Fmsy.html","id":"selection-des-différents-tacs-","dir":"Articles","previous_headings":"","what":"Selection des différents TACs.","title":"Scénarios TAC, quotas et transition Fmsy","text":"La recherche du TAC pour atteindre le \\(F_{msy}\\) se fait en simulant plusieurs scénarios correspondant à différentes valeurs de TACs simulées. Les scénarios sont simulés avec \\(N\\) réplicats, correspondant à la variabilité du recrutement. Les valeurs de \\(N\\), \\(F_{msy}\\) et \\(TAC\\) sont fixées ici : 3500 simulations seront donc effectuées. La simulation du scénario Statu Quo est codée comme suit : Afin de simplifier le code, seules les variables biologiques seront extraites et représentées. Pour cela, la fonction suivante est utilisée : De même, des modifications du paramètrage sur le module Gestion ont lieu en commun pour tout les scénarios suivants. Ces modifications sont regroupées ici avec la selection de la variables d’ajustement (Nb trips), la cible (TAC), l’espèce concernées (COR), un délais avant l’application de la mesure de gestion (2 ans) et comment s’applique la modulation de l’effort (multiplicatif borné entre 1e6 et -100)","code":"N <- 500 Fmsy <- 0.26 TACS <- seq(3200, 5600, by = 400) # Statu quo SQ <- replicate(N, {   IAM::IAM.model(objArgs = IAM_argum_2009,  objInput = IAM_input_2009) })  SQl <- lapply(1:N,  function(y) {   IAM.format(SQ[[y]], name = c(\"Fbar\", \"SSB\", \"L_et\"),              sim_name = \"SQ\", n = y) }) SQ <- do.call(rbind, SQl) #' Function for simulation under TAC #' @param x TAC value #' @param argum iamArgs object #' @param input iamInput object #' @param N Number of replicates #' #' @return formated table of class iam_formtbl that regroup values #' for N simulation under a scenario. Only Fbar, SSB and L_et #' variables are extracted. simultac <- function(x, argum, input, N){    argum_int <- IAM.editArgs_Gest(argum, type = \"x\", active = TRUE,                              tac = c(NA, NA, rep(x, 10)) )    sim <- replicate(N, {   IAM::IAM.model(objArgs = argum_int,  objInput = input)   })    siml <- lapply(1:N,  function(y) {     IAM.format(sim[[y]], name = c(\"Fbar\", \"SSB\", \"L_et\"),                sim_name = as.character(x), n = y)   })   sim <- do.call(rbind, siml)    return(sim) } IAM_argum_2009_TAC <- IAM.editArgs_Gest(   IAM_argum_2009, active = FALSE, control = \"Nb trips\", target = \"TAC\",   espece = \"COR\", delay = 2,   type = \"x\", bounds = c(1e6, -100),   tac = c(NA, NA, rep(3600, 10)))       #   09, 10,     2011:2020  TACS # TACS values to remember #> [1] 3200 3600 4000 4400 4800 5200 5600 # Warning ! Code run for long time. x <- Sys.time() cl <- makeCluster(detectCores()-1) invisible(clusterEvalQ(cl,library(IAM)))  res <-parLapply(cl, as.list(TACS), simultac,                  IAM_argum_2009_TAC, IAM_input_2009, N) stopCluster(cl)  res <- do.call(rbind, c(res, list(SQ))) print(Sys.time() - x) #> Time difference of 35.0032 mins"},{"path":"/articles/Target_Fmsy.html","id":"représentations-graphiques","dir":"Articles","previous_headings":"Selection des différents TACs.","what":"Représentations graphiques","title":"Scénarios TAC, quotas et transition Fmsy","text":"peut aisement comparer les différents scénarios en utilisant les fonctions graphiques. COR variables different TAC scenarii. 500 runs. Fmsy Probability 500 runs. Target Fmsy COR species : 0.26","code":"COR <- res %>%   filter(species == \"COR\") %>%   IAM.format_quant(., probs = c(.025, .975))  COR %>%   ggplot(aes(x = year, y = median)) +   facet_grid(variable ~ sim_name, scales = \"free_y\") +   geom_ribbon(aes(ymin = quant1, ymax = quant2), fill = \"lightblue\") +   geom_line() +   geom_line(aes(y = value), linetype = \"dotted\") +   geom_vline(xintercept=2011, linetype = \"dotted\") +   IAM_theme() +   NULL line_data <- data.frame(xintercept = c(2011, 2015),                         Lines = c(\"Scenarii start\", \"Target Fmsy\"),                         linetype = c(\"dotted\", \"dashed\"),                         stringsAsFactors = FALSE)  Proba <- res %>%   filter(species == \"COR\") %>%   group_by(.data$sim_name, .data$variable, .data$year) %>%     summarize(Pfmsy = sum(.data$value <= Fmsy) / length(unique(n)) * 100,               .groups = \"keep\") %>% ungroup()  Proba %>%   filter(variable == \"Fbar\") %>%   ggplot(aes(x = year, y = Pfmsy, color = as.factor(sim_name)))+   geom_line() +   geom_vline(xintercept= line_data$xintercept, linetype = line_data$linetype) +   annotate(\"text\", line_data$xintercept, 100, hjust = -.25,     label = line_data$Lines) +   scale_colour_discrete(name  =\"TAC constant\") +   NULL filter(Proba, year == 2015, variable == \"Fbar\") #> # A tibble: 8 x 4 #>   sim_name variable  year Pfmsy #>   <chr>    <chr>    <dbl> <dbl> #> 1 3200     Fbar      2015  76.4 #> 2 3600     Fbar      2015  85.6 #> 3 4000     Fbar      2015  60.6 #> 4 4400     Fbar      2015  13   #> 5 4800     Fbar      2015   0.6 #> 6 5200     Fbar      2015   0   #> 7 5600     Fbar      2015   0   #> 8 SQ       Fbar      2015   0 beepr::beep(3)"},{"path":"/articles/Target_Fmsy.html","id":"tac-jusquau-fmsy-","dir":"Articles","previous_headings":"","what":"TAC jusqu’au Fmsy.","title":"Scénarios TAC, quotas et transition Fmsy","text":"reproduit l’analyse précédente mais en changeant la cible des scénarios. Ainsi, va ici viser un TAC jusqu’à atteinte d’un Fbar. précise pour cela un \\(Fbar\\) cible et réduit les bornes de recherche du multiplicateur \\(\\mu\\).","code":"IAM_argum_2009_TAC_fmsy <- IAM.editArgs_Gest(   IAM_argum_2009_TAC, active = FALSE, target = \"TAC->Fbar\",   type = \"x\", bounds = c(100, -100),   tac = c(NA, NA, rep(3600, 10)),   fbar = c(NA, NA, rep(Fmsy, 10)))       #   09, 10,      2011:2020  TACS # TACS values to remember #> [1] 3200 3600 4000 4400 4800 5200 5600 # Warning ! Code run for long time. x <- Sys.time() cl <- makeCluster(detectCores()-1) invisible(clusterEvalQ(cl,library(IAM)))  res <-parLapply(cl, as.list(TACS), simultac,                 IAM_argum_2009_TAC_fmsy, IAM_input_2009, N) stopCluster(cl)  res <- do.call(rbind, c(res, list(SQ))) print(Sys.time() - x) # 50 -> 3 min #> Time difference of 40.88487 mins"},{"path":"/articles/Target_Fmsy.html","id":"représentations-graphiques-1","dir":"Articles","previous_headings":"TAC jusqu’au Fmsy.","what":"Représentations graphiques","title":"Scénarios TAC, quotas et transition Fmsy","text":"Les représentations graphiques reprennent le même code que précédement. COR variables different TAC scenarii. 500 runs.","code":"COR <- res %>%   filter(species == \"COR\") %>%   IAM.format_quant(., probs = c(.025, .975))  COR %>%   ggplot(aes(x = year, y = median)) +   facet_grid(variable ~ sim_name, scales = \"free_y\") +   geom_ribbon(aes(ymin = quant1, ymax = quant2), fill = \"lightblue\") +   geom_line() + geom_point(size = .5) +   geom_line(aes(y = value), linetype = \"dotted\") +   geom_vline(xintercept=2011, linetype = \"dotted\") +   IAM_theme() +   NULL"},{"path":"/articles/Target_Fmsy.html","id":"calcul-de-la-probabilité-datteindre-le-f_msy","dir":"Articles","previous_headings":"TAC jusqu’au Fmsy.","what":"Calcul de la probabilité d’atteindre le \\(F_{msy}\\)","title":"Scénarios TAC, quotas et transition Fmsy","text":"peut calculer la probabilité d’atteindre le \\(F_{msy}\\) comme le pourcentage de simulation ayant un \\(F_{bar} < F_{msy}\\). Fmsy Probability 500 runs. Target Fmsy COR species : 0.26","code":"line_data <- data.frame(xintercept = c(2011, 2015),                         Lines = c(\"Scenarii start\", \"Target Fmsy\"),                         linetype = c(\"dotted\", \"dashed\"),                         stringsAsFactors = FALSE)  Proba <- res %>%   filter(species == \"COR\") %>%   group_by(.data$sim_name, .data$variable, .data$year) %>%     summarize(Pfmsy = sum(.data$value <= Fmsy) / length(unique(n)) * 100,               .groups = \"keep\") %>% ungroup()  Proba %>%   filter(variable == \"Fbar\") %>%   ggplot(aes(x = year, y = Pfmsy, color = as.factor(sim_name)))+   geom_line() +   geom_vline(xintercept= line_data$xintercept, linetype = line_data$linetype) +   annotate(\"text\", line_data$xintercept, 100, hjust = -.25,     label = line_data$Lines) +   scale_colour_discrete(name  =\"TAC constant\") +   NULL filter(Proba, year == 2015, variable == \"Fbar\") #> # A tibble: 8 x 4 #>   sim_name variable  year Pfmsy #>   <chr>    <chr>    <dbl> <dbl> #> 1 3200     Fbar      2015  74.6 #> 2 3600     Fbar      2015  81.6 #> 3 4000     Fbar      2015  58.2 #> 4 4400     Fbar      2015  12.4 #> 5 4800     Fbar      2015   0   #> 6 5200     Fbar      2015   0   #> 7 5600     Fbar      2015   0   #> 8 SQ       Fbar      2015   0 beepr::beep(3)"},{"path":"/articles/use_IAM.html","id":"choix-dimplémentation","dir":"Articles","previous_headings":"","what":"Choix d’implémentation","title":"Utilisation IAM dans R (fr)","text":"Les choix d’implémentation du modèle IAM ont découlé d’exigences techniques fixées dans le de maximiser la pérennité et la fonctionnalité du modèle. Elles portaient à la fois sur l’aspect purement technique du programme (rapidité, qualité des algorithmes,…), sur sa flexibilité (généricité et robustesse face à la multiplicité des configurations d’inputs prises en charge, diversité des scénarios proposés, choix des bases de données d’entrée, diversité des outils satellites au modèle proprement dit,…) ou encore sur son accessibilité (simplicité d’utilisation, logiciels gratuits et facilement téléchargeables, installation simple, méthodes à la fois génériques et paramétrables,…). Le langage R réunit une grande partie de ces caractéristiques. C’est un logiciel libre et gratuit de traitement statistique, largement répandu à l’heure actuelle au sein de la communauté halieutique et qui offre l’avantage d’être relativement simple d’emploi. Il représente un environnement adéquat pour gérer des objets de paramétrage (notamment multidimensionnels, comme le sont ceux du modèle bio-économique). De surcroît, les sorties exportées en tant qu’objets R peuvent bénéficier des nombreuses fonctionnalités proposées par le logiciel (sorties graphiques, traitements statistiques,…). Toutefois, il est apparu que le modèle deviendrait très rapidement exigeant en terme de temps calcul (algorithmes d’optimisation, beaucoup de variables, beaucoup de dimensions,…) et que l’utilisateur trouverait là la limite des possibilités offertes par R. La solution la plus évidente était de programmer le cœur du modèle en C++, et de laisser R piloter les routines, se contentant ainsi de gérer le paramétrage et le traitement des sorties. Ainsi, le modèle serait aussi simple d’utilisation que possible, sans toutefois que cela se fasse au détriment de ses performances et de sa flexibilité.","code":""},{"path":"/articles/use_IAM.html","id":"le-package-iam-version-2-0-0","dir":"Articles","previous_headings":"","what":"Le package IAM (version 2.0.0)","title":"Utilisation IAM dans R (fr)","text":"Ce qui suit va être une description par l’exemple des outils contenus dans la version 2.0.0 du package IAM. Il faut garder à l’esprit que ce package étant encore en cours de développement, certains des descriptifs présentés ici pourront devenir obsolètes dans les prochaines versions. Ajoutons que toute cette partie suppose une connaissance minimale du logiciel R (installation d’un package, utilisation de la fenêtre de commande,…).","code":""},{"path":"/articles/use_IAM.html","id":"installation-et-chargement-du-package","dir":"Articles","previous_headings":"Le package IAM (version 2.0.0)","what":"Installation et chargement du package","title":"Utilisation IAM dans R (fr)","text":"L’installation du package IAM se fait de la même manière que tout autre package du CRAN, à la différence que le dépôt doit être précisé. D’autres méthodes d’installations sont développées dans le README.md du gitlab hébergeant le code source. Ces méthodes peuvent être utiles dans le cas d’installation de versions précédentes ou en cours de développement actif. Après avoir installé le package IAM, l’instruction suivante va charger le package en session, donnant accès à tous les outils de modélisation : peut vérifier que le package est bien installé en tapant : Ces commandes permettend d’accéder à l’aide du package, avec une aide détaillée pour chaque fonction. S’y ajoute également l’ensemble des méthodes et des classes d’objets dorénavant accessibles.","code":"install.packages(\"IAM\", repos = \"https://ifremer-iam.r-universe.dev\") library(IAM) help(IAM) # alternative : ?IAM help(package = IAM)"},{"path":"/articles/use_IAM.html","id":"importation-des-paramètres-iam-input","dir":"Articles","previous_headings":"Le package IAM (version 2.0.0)","what":"Importation des paramètres (IAM.input)","title":"Utilisation IAM dans R (fr)","text":"La package intègre un fichier exemple de paramétrage qui va permettre d’illustrer le fonctionnement des procédures d’importation.  La fonction IAM_example() renvoie le chemin du fichier d’exemple choisis dans le package IAM. Il s’agit de données brutes au format .xlsx ou .RData. Ces données brutes sont constituées d’un fichier .xlsx, d’une fichier .RData contenant des informations pour une espèce SS3 ainsi qu’un dossier fleet/ contenant les informations sur les structures de coûts de plusieurs flotilles types. Le package contient également des objets intermédiaires issus des différentes fonctions. peut accéder à la liste des fichiers d’exemples et leur documentation avec les commandes suivantes : La méthode IAM.input() sert à l’importation des paramètres d’entrée bruts du modèle, et retourne un objet de classe iamInput regroupant de manière organisée toute ces données. Elle prend pour argument principal le chemin du fichier .xlsx à importer, complété par t_init l’instant initial, et nbStep le nombre de pas de temps désiré pour la simulation. Dans le cadre de cet exemple, il faut cependant noter quelques modifications. En effet ici les flotilles ne sont pas comprises dans le fichier .xlsx et sont donc à aller chercher dans un dossier flottille avec l’argument folderFleet. De même, une espèce décrite dans le fichier de paramètrage utilise un modèle de dynamique dit SS3, et les informations sont donc introduites à ce moment là. Il s’agit de mortalité définies par saisons. procède alors à l’importation de la manière suivante (attention, cela peut prendre quelques secondes selon le nombre de flottilles): L’objet résultant (ici IAM_input_2009) de classe iamInput possède une structure fixe spécifique, composée d’éléments appelés “slots” et que l’peut distinguer de cette façon : Le slot “desc” est un simple descripteur permettant de caractériser l’objet ; c’est un paramètre optionnel de la fonction IAM.input. Le slot “specific” est constitué des descriptifs des dimensions du modèle qui vont conditionner la structure des variables. Le slot “historical” regroupe les données antérieures à l’instant initial t_init. Les slots “scenario” et “stochastic” intègrent les paramètres définis dans les feuillets correspondants. Enfin, le slot principal “input” rassemble les données initiales injectées dans le modèle. Il est composé d’un élément “Fleet” et d’un élément par espèce modélisée, ces derniers possédant la même structure. Au final, ce slot rassemble toutes les informations renseignées dans les feuillets “Stock”, “Flottille” et “Market”, ainsi que les matrices “fm”, “mm” et “icat”. Voici quelques exemples permettant d’accéder aux données de cet objet (l’accès aux slots se fait par objet@slot, l’accès aux éléments d’un slot par slot$élément) : peut ici noter l’attribut DimCst associé à la variable wStock_i . Chaque variable d’entrée insérée dans le slot input est affectée de cet attribut qui définit sa dimension : la première composante est la dimension flottille (0 signifie “pas de dimension”), la seconde est la dimension métier, la troisième est la dimension âge/catégorie, et la quatrième est la dimension temporelle. Dans l’exemple précédent, la variable se décline uniquement suivant la dimension “âge”, qui comprend pour l’espèce considérée 7 modalités. Cette attribution systématique permet au modèle de gérer les incompatibilités de dimensions entre les variables et de considérer plusieurs niveaux de définition pour une même variable. Afin de simplifier l’utilisation de cette classe d’objets, une méthode summary() été implémentée qui permet d’avoir un aperçu rapide :","code":"IAM_example(\"inputFile.xlsx\") # attention ici il s'agit d'un fichier brut. # ce fichier est accessible a cette adresse pour être lu et modifié au besoin list.files(IAM_example(file = \".\"), recursive = TRUE)  # listes des fichiers accessibles avec IAM_example() data(package = \"IAM\") load(IAM_example(\"IAM_SS3_2009.RData\"))  IAM_input_2009 <- IAM::IAM.input(   fileIN = IAM_example(\"inputFile.xlsx\"),   t_init = 2009, nbStep = 12, folderFleet = IAM_example(\"fleets\"),   # elements    Fq_i = list(DAR = iniFq_i), iniFq_i = list(DAR = iniFq_i),   Fq_fmi = list(DAR = iniFq_fmi), iniFq_fmi = list(DAR = iniFq_fmi),   FqLwt_i = list(DAR = iniFqLwt_i), iniFqLwt_i = list(DAR = iniFqLwt_i),   FqLwt_fmi = list(DAR = iniFqLwt_fmi), iniFqLwt_fmi = list(DAR = iniFqLwt_fmi),   FqDwt_i = list(DAR = iniFqDwt_i), iniFqDwt_i = list(DAR = iniFqDwt_i),   FqDwt_fmi = list(DAR = iniFqDwt_fmi), iniFqDwt_fmi = list(DAR = iniFqDwt_fmi),   Nt0s1q = list(DAR = Nt0s1q), Ni0q = list(DAR = Ni0q),   iniNt0q = list(DAR = iniNt0q), matwt = list(DAR = mat_morphage) ) slotNames(IAM_input_2009) #> [1] \"desc\"         \"specific\"     \"historical\"   \"input\"        \"scenario\"     #> [6] \"stochastic\"   \"optimization\" names(IAM_input_2009@specific) #>  [1] \"Species\"   \"StaticSpp\" \"AllSpp\"    \"Fleet\"     \"Metier\"    \"MetierEco\" #>  [7] \"Ages\"      \"Cat\"       \"t_init\"    \"NbSteps\"   \"times\"     \"Q\"         #> [13] \"S\" names(IAM_input_2009@input) #>  [1] \"ARC\"   \"COR\"   \"DAR\"   \"GAR\"   \"GLY\"   \"HER\"   \"MAH\"   \"DOR\"   \"PAV\"   #> [10] \"INO\"   \"TUL\"   \"PAM\"   \"MON\"   \"OED\"   \"HAY\"   \"FET\"   \"RHO\"   \"IPH\"   #> [19] \"THY\"   \"OCH\"   \"VAU\"   \"ZZZ\"   \"Fleet\" IAM_input_2009@input$COR$wStock_i #>     2     3     4     5     6     7   +gp  #> 0.200 0.252 0.302 0.373 0.394 0.405 0.555  #> attr(,\"DimCst\") #> [1] 0 0 7 0 attributes(IAM_input_2009@input$COR$wStock_i)$DimCst[3] #> [1] 7 summary(IAM_input_2009) #> My Input (IAM input) : #> Simulation of 3 dynamic species, 19 static species and 7 fleet #> Simulation start in 2009 and end in 2020 (12 steps) #>  #> ------------------------------------ #> Dynamic Species | Model |     Ages | #>             ARC |   XSA | 0 to +gp | #>             COR |   XSA | 2 to +gp | #>             DAR |   SS3 | 0 to +gp | #> ------------------------------------ #>                   Fleet |    nbv   | #>                    Alis |    24    | #>                   Antea |    36    | #>                Atalante |    15    | #>                Haliotis |     5    | #>         Marion_Dufresne |     9    | #>            Pourquoi_pas |    18    | #>                Thalassa |    60    |"},{"path":"/articles/use_IAM.html","id":"constitution-des-arguments-iam-args","dir":"Articles","previous_headings":"Le package IAM (version 2.0.0)","what":"Constitution des arguments (IAM.args)","title":"Utilisation IAM dans R (fr)","text":"La méthode IAM.args() prend en paramètre un objet de classe iamInput et permet à l’utilisateur de fixer les caractéristiques de la simulation à opérer. Une interface de paramétrage s’affiche, et la validation renvoie un objet de classe iamArgs définissant les choix de pilotage du modèle. L’instruction va provoquer l’affichage d’une interface de paramétrage comportant 5 parties distinctes, chacune activant ou/et paramétrant une partie spécifique du modèle. Recruitment : ce panneau de commande de type “tabbed notebook” permet de définir l’intégration de la variabilité dans le modèle en caractérisant le recrutement considéré dans la simulation. Il y un onglet par espèce modélisée, chacun donnant accès à un choix de paramètres similaires. pourra soit opter pour un recrutement généré par une relation stock-recrutement (activer alors le panneau en cochant “Stock Recrutement Model”, soit simuler un recrutement par tirage aléatoire dans un historique ou une loi de probabilité (cocher “StockSim”). Dans le premier cas, 5 paramètres sont à définir : le type de relation stock-recrutement, les paramètres de la relation (3 au maximum), et l’écart-type du bruit gaussien centré additionnel. Les relations sont décrites dans le tableau suivant : Il est possible d’annuler l’effet aléatoire en mettant la variable \\(\\sigma\\) à 0 (pas de variance, donc pas de variabilité). Précisons aussi que le recrutement s’exprime ici en nombre d’individus. La deuxième possibilité est de considérer le recrutement comme étant la réalisation d’un tirage aléatoire. Trois options sont alors envisageables : l’option 1 permet d’effectuer un tirage aléatoire dans l’historique de recrutement renseigné dans le feuillet “Stochasticité” du fichier de paramétrage, de manière indépendante (avec toutefois la pondération des probabilités spécifiée dans le fichier .xlsx). l’option 2 est similaire à l’option 1, à la différence que le tirage ne sera pas indépendant. Pour chaque instant de la simulation, un seul tirage sera effectué pour toutes les espèces d’option 2 de recrutement pour déterminer un instant commun de l’historique à considérer. Notons que ce type de tirage impliquera seulement l’intersection des historiques pour les espèces concernées. enfin, l’option 3 offre la possibilité de simuler le recrutement d’une espèce comme étant la réalisation d’une variable aléatoire de loi prédéterminée. Cette loi devra également être préalablement définie au sein du feuillet “Stochasticité” du fichier de paramètres. Replicates : cette partie de l’interface permet de piloter le module de réplication. Pour activer/désactiver le module, cocher “activate”. Une fois le module activé, peut paramétrer le nombre d’itérations à opérer, et choisir les variables en sortie. Cette option permet de limiter la taille des résultats de simulations qui peuvent devenir très volumineux si multiplie inconsidérément le nombre de réplicats. Ce sera surtout le cas avec des variables à haut niveau de précision telles que L_efmit. Scenario : cette partie de l’interface permet de choisir le scénario à simuler, ce dernier étant caractérisé dans le feuillet “Scénario” du fichier de paramétrage. Pour activer/désactiver le module, cocher “activate”. Une fois le module activé, un scénario devra être sélectionné dans la liste (par définition, un scénario Statu Quo impliquera la désactivation du module). Afin de simplifier la mise en oeuvre des simulations et la gestion des sorties du modèle, ne peut simuler qu’un seul scénario par envoi. noter que ces scénarios sont plus difficiles à régler et demandent une bonne compréhension du modèle par rapport à l’utilisation de scénario par la partie “Management” du modèle et les scénarios de TAC. Management : le module “Management” peut être piloté intégralement par cette composante de l’interface pour les scénarios de TAC totaux. Un paramétrages de scénarios TAC par flottilles par exemple requiert de paramétrer la fonctions IAM.model() et fait l’objet d’une autre vignette. Tout comme pour les deux précédents contrôles, activera le module en cochant “activate”, permettant ainsi l’accès aux champs de paramètres à renseigner suivants : Control : permet de spécifier sur quelle variable d’effort agir afin d’atteindre les objectifs de gestion (pour le moment, laisse le choix entre le nombre de navires et le nombre de jours de mer). Target : variable sur laquelle porte les objectifs définis (3 options : atteinte du TAC, atteinte du Fbar, ou atteinte du TAC jusqu’à atteindre le Fbar, puis atteinte du Fbar). Bouton TAC/Fbar : permet de renseigner les valeurs-objectifs de TAC et de Fbar pour l’espèce en question, sur l’intervalle de temps spécifié dans le paramétrage (une cellule par pas de temps). Il est conseillé de renseigner toutes les cellules de la table, en particulier pour une cible de type 3 (voir plus haut). La validation des valeurs s’opère à la fermeture de la fenêtre. Species : espèce sur laquelle porte la mesure de gestion (à choisir entre toutes les espèces modélisées) Type : multiplicatif ou additif. Delay : délai d’application de la mesure de gestion (autrement dit, temps d’attente avant la mise en activation du module). Update : définit si l’ajustement s’opère à chaque fois sur les valeurs initiales des variables, ou sur les valeurs mises à jour. (NB: cette option n’impacte que sur la manière de quantifier les ajustements, et ne revêt de l’importance que dans des cadres d’utilisation très spécifiques). Upper bound / Lower bound : bornes de l’intervalle d’application de la procédure d’optimisation. Un intervalle restreint permet de maximiser le temps de calcul, mais fait prendre le risque de ne pas trouver de solution. Ces valeurs sont fortements dépendantes du type de gestion réglé. utiliser avec précaution. Bouton Eff table : effort maximum par flottille. Bouton mFm table : permet de renseigner les pondérations (décimales) par flottille utilisées durant le processus d’ajustement (une cellule par classe de flottille). Cette pondération permet de paramétrer la distribution d’effort concédée par chaque flottille afin d’atteindre l’objectif désiré. Un poids nul signifiera que la flottille en question conservera son effort initial. Un poids p signifiera que la variation de l’effort consentie par la flottille pour atteindre au final la valeur objectif sera p fois plus importante que celle des flottilles de poids unité (attention : tout ceci s’applique relativement au signe de variation global, qui peut être contrôlé par le biais des bornes supérieures et inférieures préalablement définies). Des poids de signes opposés peuvent être utilisés pour simuler des variations contraires selon les flottilles. Economic : la dernière phase de paramétrisation concerne le modèle économique. La plupart des paramètres ici décrits peuvent être retrouvés dans le tableau de mise en équation du modèle économique en annexe de ce document. 0 : la variable est supposée constante 1 : relation linéaire avec rtbs et donnée cshr disponible 2 : relation linéaire avec rtbs et donnée cshr indisponible Discound rate (dr) (Taux d’actualisation): Attention, le taux est en décimal, pas en pourcentage. Pour 4% d’actualisation, il faut rentrer la valeur 0,04. Ce taux d’actualisation va s’appliquer en sortie du modèle à une sélection de variables économiques principales, qui seront donc disponibles en 2 versions, actualisée et non actualisée. Ces variables sont les suivantes : rtbs_f, cs_f, gva_f, gcf_f, ps_f et sts_f. Une fois la validation des arguments effectuée en cliquant sur “OK”, un objet de classe iamArgs est retourné, intégrant tous les arguments qui vont conditionner les processus mis en œuvre pendant la phase de simulation. Afin de simplifier l’utilisation de cette classe d’objets, une méthode summary() été implémentée qui permet d’avoir un aperçu rapide peut modifier l’objet déjà existant utilisant des fonctions spécifiques et les valeurs voulues. Mais ceci suggère une bonne connaissance de R et un risque non négligeable d’entamer la structure de l’objet. Par exemple, pour mettre en oeuvre la module Gestion et modifier les variables économiques : Mais la procédure la plus simple pour corriger un objet est de reprendre l’interface au stade de la validation, et d’effectuer directement les corrections. Pour cela, il suffit de rappeler la méthode IAM.args(), mais non plus affectée à un objet de paramétrage initial de classe iamInput, mais plutôt à l’objet qu’désire modifier. tape donc : Une interface reprenant tous les arguments auparavant validés s’ouvre, permettant la correction, la validation, et ainsi la mise à jour de l’objet IAM_argum_2009 en sortie.","code":"IAM_argum_2009 <- IAM.args(IAM_input_2009) summary(IAM_argum_2009) #> My Input (IAM argument) : #> Simulation of 3 dynamic species, 19 static species and 7 fleet #> Simulation start in 2009 and end in 2020 (12 steps) #>  #> ======================================================================================= #>   SR module  |               Stock Recruitment             |      Noise       | Proba | #> --------------------------------------------------------------------------------------- #>     Species  |    function  :  param A ; param B ; param C |  Type :    sd    |  Type | #>    ARC (XSA) |          Mean 3.641e+07  0.00e+00  0.00e+00 |  Norm | 0.00e+00 |   .   | #>    COR (XSA) |          Mean 1.893e+07  0.00e+00  0.00e+00 |  Norm | 0.00e+00 |   .   | #>    DAR (SS3) | not activated 0.000e+00  0.00e+00  0.00e+00 |  Norm | 0.00e+00 |   .   | #> --------------------------------------------------------------------------------------- #>  #>  The Gestion module is not active. #>  #> ============================================================ #> Economic : PerscCalc = 0 ; dr = 0.000 | No replicates      | #> ------------------------------------------------------------ #>  #>  The Scenario module is not active. names(IAM_argum_2009@arguments) #> [1] \"Recruitment\" \"Replicates\"  \"Scenario\"    \"Gestion\"     \"Eco\" # Modify Gestion IAM_argum_2009 <- IAM.editArgs_Gest(   IAM_argum_2009, active = TRUE, control = \"Nb trips\", target = \"Fbar\",   espece = \"DAR\", type = \"x\") # Modify Eco IAM_argum_2009 <- IAM.editArgs_Eco(IAM_argum_2009, dr = 0.04, perscCalc = 3) # Check if Gestion is active summary(IAM_argum_2009) #> My Input (IAM argument) : #> Simulation of 3 dynamic species, 19 static species and 7 fleet #> Simulation start in 2009 and end in 2020 (12 steps) #>  #> ======================================================================================= #>   SR module  |               Stock Recruitment             |      Noise       | Proba | #> --------------------------------------------------------------------------------------- #>     Species  |    function  :  param A ; param B ; param C |  Type :    sd    |  Type | #>    ARC (XSA) |          Mean 3.641e+07  0.00e+00  0.00e+00 |  Norm | 0.00e+00 |   .   | #>    COR (XSA) |          Mean 1.893e+07  0.00e+00  0.00e+00 |  Norm | 0.00e+00 |   .   | #>    DAR (SS3) | not activated 0.000e+00  0.00e+00  0.00e+00 |  Norm | 0.00e+00 |   .   | #> --------------------------------------------------------------------------------------- #>  #> ============================================================================= #>                      Gestion Module                                         |  #> ----------------------------------------------------------------------------- #>     Species  |   control  |    target | delay | typeG | update |   bounds   | #>    DAR (SS3) |   Nb trips |      Fbar |    2  |   x   |   yes  |   0 :    0 | #> ----------------------------------------------------------------------------- #>    TAC : NA NA NA NA NA NA NA NA NA NA NA NA  #>   FBAR : NA NA NA NA NA NA NA NA NA NA NA NA  #> ---------------------------------------------------------------------------- #>  #> ============================================================ #> Economic : PerscCalc = 3 ; dr = 0.040 | No replicates      | #> ------------------------------------------------------------ #>  #>  The Scenario module is not active. # Desactivate Gestion IAM_argum_2009 <- IAM.editArgs_Gest(IAM_argum_2009, active = FALSE) IAM_argum_2009 <- IAM.args(IAM_argum_2009)"},{"path":"/articles/use_IAM.html","id":"simulation-iam-model","dir":"Articles","previous_headings":"Le package IAM (version 2.0.0)","what":"Simulation (IAM.model)","title":"Utilisation IAM dans R (fr)","text":"Une fois les deux principaux composants du paramétrage obtenus, la mise en route de la simulation est très simple : la méthode IAM.model() appelle l’objet de classe iamArgs et l’objet de classe iamInput et restitue les résultats de la simulation dans un objet de classe iamOutput, ou de classe iamOutputRep si le module de réplication est activé. Toutes les sorties du modèle sont entreposées dans 2 slots de l’objet IAM_out_2009. Un slot outputSp réunit toutes les variables définies par espèce modélisée (sorties du modèle biologique principalement), et un autre slot output rassemble les variables sans dimension espèce (les variables économiques). L’accès aux variables est illustré ci-dessous : Dans le cas d’un objet de classe iamOutputRep, chaque variable est une liste de n éléments, avec n le nombre de réplicats.","code":"IAM_out_2009 <- IAM.model(IAM_argum_2009,IAM_input_2009) class(IAM_out_2009) #> [1] \"iamOutput\" #> attr(,\"package\") #> [1] \"IAM\" slotNames(IAM_out_2009) #> [1] \"desc\"      \"arguments\" \"specific\"  \"outputSp\"  \"output\" names(IAM_out_2009@outputSp) #>   [1] \"F\"              \"Fr\"             \"Fothi\"          \"Fbar\"           #>   [5] \"Z\"              \"N\"              \"B\"              \"SSB\"            #>   [9] \"C\"              \"Ctot\"           \"Y\"              \"Ytot\"           #>  [13] \"D\"              \"Li\"             \"Lc\"             \"Ltot\"           #>  [17] \"L_et\"           \"L_pt\"           \"P\"              \"GVL_f_m_e\"      #>  [21] \"GVLcom_f_m_e\"   \"GVLst_f_m_e\"    \"statY\"          \"statL\"          #>  [25] \"statD\"          \"statP\"          \"statGVL_f_m\"    \"statGVLcom_f_m\" #>  [29] \"statGVLst_f_m\"  \"PQuot\"          \"TradedQ\"        \"F_S1M1\"         #>  [33] \"F_S1M2\"         \"F_S1M3\"         \"F_S1M4\"         \"F_S2M1\"         #>  [37] \"F_S2M2\"         \"F_S2M3\"         \"F_S2M4\"         \"F_S3M1\"         #>  [41] \"F_S3M2\"         \"F_S3M3\"         \"F_S3M4\"         \"F_S4M1\"         #>  [45] \"F_S4M2\"         \"F_S4M3\"         \"F_S4M4\"         \"Fr_S1M1\"        #>  [49] \"Fr_S1M2\"        \"Fr_S1M3\"        \"Fr_S1M4\"        \"Fr_S2M1\"        #>  [53] \"Fr_S2M2\"        \"Fr_S2M3\"        \"Fr_S2M4\"        \"Fr_S3M1\"        #>  [57] \"Fr_S3M2\"        \"Fr_S3M3\"        \"Fr_S3M4\"        \"Fr_S4M1\"        #>  [61] \"Fr_S4M2\"        \"Fr_S4M3\"        \"Frefmi\"        #>  [97] \"DD_efmc\"        \"LD_efmi\"        \"LD_efmc\"        \"statDD_efm\"     #> [101] \"statLD_efm\"     \"statLDst_efm\"   \"statLDor_efm\"   \"oqD_ef\"         #> [105] \"oqD_e\"          \"oqDstat_ef\"     \"TACtot\"         \"TACbyF\"         #> [109] \"PQuot_conv\"     \"diffLQ_conv\" names(IAM_out_2009@output) #>  [1] \"nbv_f\"              \"effort1_f\"          \"effort2_f\"          #>  [4] \"nbv_f_m\"            \"effort1_f_m\"        \"effort2_f_m\"        #>  [7] \"GVLtot_f_m\"         \"GVLav_f_m\"          \"GVLtot_f\"           #> [10] \"GVLav_f\"            \"NGVLav_f_m\"         \"NGVLav_f\"           #> [13] \"ET_f_m\"             \"cnb_f_m\"            \"cnb_f\"              #> [16] \"rtbs_f_m\"           \"rtbs_f\"             \"rtbsAct_f\"          #> [19] \"cshrT_f_m\"          \"cshrT_f\"            \"ncshr_f\"            #> [22] \"ocl_f\"              \"cs_f\"               \"csAct_f\"            #> [25] \"csTot_f\"            \"gva_f\"              \"gvaAct_f\"           #> [28] \"gvamargin_f\"        \"gva_FTE_f\"          \"ccw_f\"              #> [31] \"ccwCr_f\"            \"wageg_f\"            \"wagen_f\"            #> [34] \"wageg_FTE_f\"        \"wageg_h_f\"          \"gp_f\"               #> [37] \"gpAct_f\"            \"gpmargin_f\"         \"ncf_f\"              #> [40] \"np_f\"               \"npmargin_f\"         \"prof_f\"             #> [43] \"npmargin_trend_f\"   \"ssTot_f\"            \"ps_f\"               #> [46] \"psAct_f\"            \"sts_f\"              \"stsAct_f\"           #> [49] \"BER_f\"              \"CR_BER_f\"           \"fuelEff_f\"          #> [52] \"ratio_fvol_gva_f\"   \"ratio_gp_gva_f\"     \"ratio_GVL_K_f\"      #> [55] \"ratio_gp_K_f\"       \"RoFTA_f\"            \"ROI_f\"              #> [58] \"ratio_np_K_f\"       \"ratio_GVL_cnb_ue_f\" \"YTOT_fm\"            #> [61] \"reconcilSPP\"        \"quotaExp_f\"         \"allocEff_f_m\"       #> [64] \"GoFish\" # Activate replicates IAM_argumRep_2009 <- IAM.editArgs_Rep(IAM_argum_2009, n = 2)  IAM_outRep_2009 <- IAM.model(IAM_argumRep_2009,IAM_input_2009) class(IAM_outRep_2009) #> [1] \"iamOutputRep\" #> attr(,\"package\") #> [1] \"IAM\" length(IAM_outRep_2009@outputSp$F) #> [1] 2 names(IAM_outRep_2009@outputSp$F[[1]]) #> [1] \"ARC\" \"COR\" \"DAR\" names(IAM_outRep_2009@outputSp$F[[2]]) #> [1] \"ARC\" \"COR\" \"DAR\""},{"path":"/articles/use_IAM.html","id":"mise-en-forme-des-sorties-iam-format-iam-format_quant","dir":"Articles","previous_headings":"Le package IAM (version 2.0.0)","what":"Mise en forme des sorties (IAM.format & IAM.format_quant)","title":"Utilisation IAM dans R (fr)","text":"La méthode IAM.format est une fonction de formatage appliquée aux objets iamOutput . Elle va permettre la conversion d’une variable multidimensionnelle en une table de type “data.frame” (format facilitant la création de graphiques adaptés à ce type de variables) Cette fonction prend également en entrée le nom d’une ou plusieurs variables à extraire, un nom de simulation et un numero qui pourront servir plus tard pour aggréger plusieurs simulations ensemble. note qu’une variable spéciale nommée \"summary\" permet d’extraire d’un seul coup quelques variables biologiques et économiques. Ce format de table long permet ensuite l’utilisation d’outils pour trier et éventuellement produire les tables dans un format large. Dans le cas d’une liste d’objet de classe iamOuput, il est possible d’extraire les variables, de concaténer et d’ensuite calculer une table résumée ne présentant que les quantiles d’interêt. Cela permet d’alleger les sorties du modèle et de les manipuler plus simplement lors de la production de représentations graphiques. noter que des colonnes seront souvent remplies de valeurs manquantes car peu de variables sont définies sur toutes les dimensions d’IAM. Cependant, il vaut mieux conserver ces colonnes jusqu’au dernier moment afin de pouvoir trier les données avec des fonctions génériques ou encore pouvoir utiliser rbind.","code":"# Extraction d'une variable statu_quo_tbl_Fbar <- IAM.format(IAM_out_2009, name = \"Fbar\",                                   sim_name = \"statu_quo\", n = 1) head(statu_quo_tbl_Fbar) #> # A tibble: 6 × 9 #>   sim_name      n variable species fleet metier age    year value #>   <chr>     <dbl> <chr>    <chr>   <chr> <chr>  <chr> <dbl> <dbl> #> 1 statu_quo     1 Fbar     ARC     NA    NA     NA     2009 0.122 #> 2 statu_quo     1 Fbar     ARC     NA    NA     NA     2010 0.122 #> 3 statu_quo     1 Fbar     ARC     NA    NA     NA     2011 0.122 #> 4 statu_quo     1 Fbar     ARC     NA    NA     NA     2012 0.122 #> 5 statu_quo     1 Fbar     ARC     NA    NA     NA     2013 0.122 #> 6 statu_quo     1 Fbar     ARC     NA    NA     NA     2014 0.122 # Extraction de plusieurs variables statu_quo_tbl_summary <- IAM.format(IAM_out_2009, name = \"summary\",                                      sim_name = \"statu_quo\", n = 1) unique(statu_quo_tbl_summary$variable) #>  [1] \"Fbar\"      \"SSB\"       \"L_et\"      \"N\"         \"nbv_f\"     \"effort1_f\" #>  [7] \"effort2_f\" \"GVLav_f\"   \"gva_f\"     \"gp_f\"      \"wageg_f\"   \"wagen_f\" library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(tidyr) library(purrr) library(magrittr) #>  #> Attaching package: 'magrittr' #> The following object is masked from 'package:purrr': #>  #>     set_names #> The following object is masked from 'package:tidyr': #>  #>     extract  # Extraction du SSB statu_quo_tbl_summary %>%   dplyr::filter( species == \"COR\", variable == \"SSB\") %>% # trie des lignes   discard(~all(is.na(.x))) %>% # retire les colonnes vides (NA)   # Ligne optionnelle pour enlever les colonnes identiques.   # discard( ~ n_distinct(.) == 1) %>%    pivot_wider(names_from = year, values_from = value) # mise en forme horizontale #> # A tibble: 1 × 16 #>   sim_name      n variable species `2009` `2010` `2011` `2012` `2013` `2014` #>   <chr>     <dbl> <chr>    <chr>    <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl> #> 1 statu_quo     1 SSB      COR     10426. 11347. 12051. 12523. 12820. 13033. #> # … with 6 more variables: `2015` <dbl>, `2016` <dbl>, `2017` <dbl>, #> #   `2018` <dbl>, `2019` <dbl>, `2020` <dbl>   # Table de gp_f statu_quo_tbl_summary %>%   dplyr::filter(variable == \"gp_f\") %>% # trie des lignes   discard(~all(is.na(.x))) %>% # retire les colonnes vides (NA)   # Ligne optionnelle pour enlever les colonnes identiques.   discard( ~ n_distinct(.) == 1) %>%    pivot_wider(names_from = year, values_from = value) # mise en forme horizontale #> # A tibble: 7 × 13 #>   fleet   `2009`  `2010`  `2011`  `2012`  `2013`  `2014`  `2015`  `2016`  `2017` #>   <chr>    <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #> 1 Alis   -3.10e7 -3.10e7 -3.10e7 -3.10e7 -3.10e7 -3.10e7 -3.10e7 -3.10e7 -3.10e7 #> 2 Antea  -4.75e7 -4.75e7 -4.75e7 -4.75e7 -4.75e7 -4.75e7 -4.75e7 -4.75e7 -4.75e7 #> 3 Atala… -1.18e7 -1.18e7 -1.18e7 -1.18e7 -1.18e7 -1.18e7 -1.18e7 -1.18e7 -1.18e7 #> 4 Halio… -6.83e5 -6.86e5 -6.92e5 -6.92e5 -6.87e5 -6.72e5 -6.54e5 -6.38e5 -6.24e5 #> 5 Mario… -6.24e6 -6.26e6 -6.25e6 -6.23e6 -6.23e6 -6.24e6 -6.24e6 -6.25e6 -6.25e6 #> 6 Pourq… -1.66e7 -1.66e7 -1.66e7 -1.66e7 -1.66e7 -1.66e7 -1.66e7 -1.66e7 -1.66e7 #> 7 Thala… -3.21e7 -3.21e7 -3.21e7 -3.21e7 -3.21e7 -3.21e7 -3.21e7 -3.21e7 -3.20e7 #> # … with 3 more variables: `2018` <dbl>, `2019` <dbl>, `2020` <dbl> res1 <- IAM.format(IAM_out_2009, c(\"SSB\"), n = 1) %>%  dplyr::filter(species == \"ARC\", year <= 2011) # Je modifie légérement les données pour avoir des quantiles écartés. res2 <- mutate(res1, n = 2, value = value + rnorm(1, sd = 100))  # On peut associer les données extraites avec rbind. res <- rbind(res1, res2)  IAM.format_quant(res, probs = c(0.025, 0.975), select_indiv = 2) %>%   discard(~all(is.na(.x))) #> # A tibble: 3 × 8 #>   variable species  year quant1 quant2 median  value  nsim #>   <chr>    <chr>   <dbl>  <dbl>  <dbl>  <dbl>  <dbl> <int> #> 1 SSB      ARC      2009 18673. 18721. 18697. 18672.     2 #> 2 SSB      ARC      2010 17940. 17989. 17965. 17939.     2 #> 3 SSB      ARC      2011 17170. 17219. 17194. 17169.     2"},{"path":"/articles/use_IAM.html","id":"représentations-graphiques-des-sorties-avec-ggplot2","dir":"Articles","previous_headings":"Le package IAM (version 2.0.0)","what":"Représentations graphiques des sorties avec ggplot2","title":"Utilisation IAM dans R (fr)","text":"Les procédures graphiques ont été retirées du packages et se basent sur l’utilisation du package ggplot2. Ainsi, le format de table renvoyé par les fonctions IAM.format et IAM.format_quant sera requis pour constiturer la donnée à représenter. Pour illustrer différentes représentations graphiques, va générer plusieurs réplicats. Le premier sera similaire le cas de statu quo généré plus haut. modifie le module de recrutement pour l’espèce “COR” afin d’ajouter un peu d’effets stochastiques. Un second scénario est simulé avec l’application de quotas. Le détails de ce genre de simulations est donné dans la vignette “Gestion_TAC”. Pour les sorties graphiques aura besoin du package ggplot2. Cette dépendance est normalement installée en même temps que le package IAM. Ce package est très riche en terme de représentations graphiques, pourra se référer à sa documentation pour plus de précisions.Un site repertorie également de nombreux exemples : https://r-graph-gallery.com/. Voici quelques exemples de représentations graphiques disponibles pour les sortie d’IAM : Evolution du Fbar dans le cas de l’espèce COR. 5 runs. L’exemple précédent permet d’illustrer la comparaison du Fbar pour deux scénarios et une espèce donnée (“COR”). peut observer l’enveloppe à droite qui est représente les deux quartiles entre lesquels retrouve 95% des simulations. peut également représenter plusieurs variables comme ci-dessous les variables biologiques de l’espèce COR : Evolution des variables biologiques dans le cas de l’espèce COR. 5 runs. Enfin, peut tout à fait intégrer plus de dimensions aux graphiques avec l’ajout de couleurs pour par exemple ici comparer deux scénarios par Flottilles et variables économiques : Evolution des variables économiques pour les flottilles modélisées. 5 runs.","code":"N = 5 IAM_argum_2009@arguments$Recruitment$COR$wnNOISEmodSR <- 5e6 # Simulation sim_statu_quo <- replicate(N, {   IAM::IAM.model(objArgs = IAM_argum_2009,  objInput = IAM_input_2009) }) # Edition des arguments IAM_argum_2009_TACnbv <- IAM.editArgs_Gest(   IAM_argum_2009, active = TRUE, control = \"Nb vessels\", target = \"TAC\",   espece = \"COR\", delay = 2, type = \"x\", bounds = c(1e7, -1),    tac = c(NA, NA, rep(3400, 10))) # Simulation sim_TACglob_nbv <- replicate(N, {   IAM::IAM.model(objArgs = IAM_argum_2009_TACnbv,  objInput = IAM_input_2009) })  # Formatage TACglobv_nbv_l <- lapply(1:N,  function(x) {   IAM.format(sim_TACglob_nbv[[x]], name = \"summary\",               sim_name = \"TAC global nbv\", n = x) }) Statuquo_l <- lapply(1:N,  function(x) {   IAM.format(sim_statu_quo[[x]], name = \"summary\",               sim_name = \"Statu quo\", n = x) })  TACvsSQ_5simuls <- do.call(rbind, c(Statuquo_l, TACglobv_nbv_l)) %>%   IAM.format_quant(., probs = c(.025, .975)) library(ggplot2) library(magrittr) # utilisation du pipe %>% library(dplyr) # utilisation de filtres TACvsSQ_5simuls %>%   # Filtrer de l'espece et de la variable cible   dplyr::filter(species == \"COR\", variable == \"Fbar\") %>%   ggplot(aes(x = year, y = median)) +   facet_grid(. ~ sim_name, scales = \"free_y\") +   geom_ribbon(aes(ymin = quant1, ymax = quant2), fill = \"white\", alpha = .4) +   geom_line() + geom_point(size = .5) +   guides(x = guide_axis(angle = 90)) + IAM_theme() +   NULL TACvsSQ_5simuls %>%  dplyr::filter(species == \"COR\", variable %in% c(\"Fbar\", \"SSB\", \"L_et\")) %>%  ggplot(aes(x = year, y = median)) +  facet_grid(variable ~ sim_name, scales = \"free_y\") +  geom_ribbon(aes(ymin = quant1, ymax = quant2), fill = \"white\", alpha = .4) +  geom_line() + geom_point(size = .5) +  guides(x = guide_axis(angle = 90)) + IAM_theme() +  NULL TACvsSQ_5simuls %>%  dplyr::filter(variable %in% c(\"GVLav_f\", \"nbv_f\")) %>%  ggplot(aes(x = year, y = median, color = sim_name)) +  facet_grid(variable ~ fleet, scales = \"free_y\") +  geom_ribbon(aes(ymin = quant1, ymax = quant2), fill = \"white\", alpha = .4) +  geom_line() + geom_point(size = .5) +  guides(x = guide_axis(angle = 90)) + IAM_theme() +  scale_color_manual(values=c(\"darkred\", \"darkorange\")) +  theme(legend.position = \"bottom\") +  NULL"},{"path":"/articles/use_IAM.html","id":"conseil-de-réplication","dir":"Articles","previous_headings":"","what":"Conseil de réplication","title":"Utilisation IAM dans R (fr)","text":"L’utilisation du package IAM prend tout son sens lors du lancement d’un même scénario répliqué de nombreuses fois. Cela permet de prendre en compte les problématiques stochastiques de certaines variables comme le recrutement. Ainsi, un même scénario peut être lancé plusieurs centaines de fois. Cette option est implémentée de base dans le package avec la classe IAMOutputRep, mais celle-ci est dépcréciée car ne permettant plus la réalisation de scénarios complexes. Une autre alternative réside dans l’utilisation de code R pour forcer de grands nombres de réplicats, au détriment d’une plus grande place en mémoire. Notons tout de même que cela peut prendre un certain temps. Afin de gagner du temps, le package {parallel} permet d’effectuer les calculs sur un plus grand nombre de processeurs de l’ordinateurs. L’utilisation de ce package permet de réduire le temps de calcul pour un grand nombre de réplicats et est donc conseillé.","code":"# Code non exécuté library(IAM) a <- Sys.time() # mesure du temps nsim_statu_quo <- replicate(   500,   IAM::IAM.model(objArgs = IAM_argum_2009, objInput = IAM_input_2009) ) b <- Sys.time() # mesure du temps b - a # 1.17 min # Code non exécuté library(parallel) cl <- makeCluster(detectCores()-1)  clusterEvalQ(cl,library(IAM)) # charger les librairies dans le cluster.  c <- Sys.time() # mesure du temps # rendre les objets disponibles pour le code clusterExport(cl,c(\"IAM_argum_2009\", \"IAM_input_2009\")) # S'assurer de \"seed\" différentes pour chaque noeud. clusterSetRNGStream(cl) #... Simuler les réplicats ... res <- parSapply(cl, 1:50, function(i,...) {   IAM::IAM.model(objArgs = IAM_argum_2009, objInput = IAM_input_2009)   } ) # Arreter le cluster stopCluster(cl) d <- Sys.time() # mesure du temps d - c # 51 sec !!!"},{"path":"/articles/use_IAM.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Utilisation IAM dans R (fr)","text":"R Core Team. 2021. R: Language Environment Statistical Computing. Vienna, Austria: R Foundation Statistical Computing. https://www.R-project.org/.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mathieu Merzereaud. Author. Claire Macher. Author. Michel Bertignac. Author. Marjolaine Fresard. Author. Olivier Guyader. Author. Christelle Le Grand. Author. Sophie Gourguet. Author. Florence Briton. Author. Maxime Jaunatre. Author, maintainer. IFREMER. Copyright holder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Merzereaud M, Macher C, Bertignac M, Fresard M, Guyader O, Le Grand C, Gourguet S, Briton F, Jaunatre M (2022). IAM: Impact Assessment Model fisheries management. R package version 2.0.0, https://gitlab.ifremer.fr/iam/iam.","code":"@Manual{,   title = {IAM: Impact Assessment Model for fisheries management},   author = {Mathieu Merzereaud and Claire Macher and Michel Bertignac and Marjolaine Fresard and Olivier Guyader and Christelle {Le Grand} and Sophie Gourguet and Florence Briton and Maxime Jaunatre},   year = {2022},   note = {R package version 2.0.0},   url = {https://gitlab.ifremer.fr/iam/iam}, }"},{"path":"/index.html","id":"iam--impact-assessment-bio-economic-model-for-fisheries-management-","dir":"","previous_headings":"","what":"Impact Assessment Model for fisheries management","title":"Impact Assessment Model for fisheries management","text":"IAM (Impact Assessment Model fisheries management) bio-economic model developed part partnership stakeholders support fisheries management. tool academic non academic knowledge integration models dynamics interactions fish stocks, vessels fleets, fisheries governance fish market. dedicated scenario simulations optimization, impact assessment management strategies (transition MSY, fisheries Management Plans, socio-economic consequences alternative TAC quotas allocation options) exploration conditions fisheries viability sustainability. enables stochastic simulations biological socio-economic consequences scenarios compare trade-offs aletrnative options multi-criteria perspective. discrete time (annual), multi-fleet multi-vessel, multi-métier, multi-species bio-economic model “age” components biological part, “commercial category” components economic part. free copy, modify, distribute IAM attribution terms CECILL-2 Licence. See LICENSE-CECILL-2.1 file details. Note : github repository mirror gitlab","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Impact Assessment Model for fisheries management","text":"IAM R package thus require install version superior 3.6. Updating R (Rstudio) recommended running lot package updates.","code":""},{"path":"/index.html","id":"from-package-repository-recommended","dir":"","previous_headings":"Installation","what":"From package repository (recommended)","title":"Impact Assessment Model for fisheries management","text":"","code":"install.packages(\"IAM\", repos = \"https://ifremer-iam.r-universe.dev\")"},{"path":"/index.html","id":"from-a-package-archive-file","dir":"","previous_headings":"Installation","what":"From a package archive file","title":"Impact Assessment Model for fisheries management","text":"Go Project ‘Releases’ page download IAM binary package (.zip format Window, tar.gz format Linux) coressponding R version. files listed assets ! Install IAM dependencies needed: Install IAM archive file entering following command R prompt:","code":"# install.packages(\"remotes\") remotes::install_deps(\"--path to zipfile--/IAM_2.0.0.zip\") install.packages(\"--path to zipfile--/IAM_2.0.0.zip\",                  repos = NULL, type = \"win.binary\")"},{"path":"/index.html","id":"from-package-source-code","dir":"","previous_headings":"Installation","what":"From package source code","title":"Impact Assessment Model for fisheries management","text":"order build packages sources Windows, need Rtools, independent software R. can install Rtools CRAN project website selecting right version. Note Rtools 4.2 still development version. can check R version R.version. Install IAM sources files entering following command R prompt:","code":"remotes::install_git(url = \"https://gitlab.ifremer.fr/iam/iam\")  # You can install development version with the ref option remotes::install_git(   url = \"https://gitlab.ifremer.fr/iam/iam\",    ref = \"dev\",    build_vignettes = require(rmarkdown) )"},{"path":"/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Impact Assessment Model for fisheries management","text":"information, documentation centralized {pkgdown} website. IAM package multiple vignettes available along functions help. Please note day, vignettes written french. get started, read Use IAM vignette. can also access vignette running code locally : depth notice french available need check model implementation mathematical formula. pdf file available download ","code":"vignette(\"use_IAM\", package = \"IAM\")"},{"path":"/index.html","id":"credits","dir":"","previous_headings":"","what":"Credits","title":"Impact Assessment Model for fisheries management","text":"IAM written Mathieu Merzéréaud, Claire Macher, Michel Bertignac, Marjolaine Frésard, Olivier Guyader, Christelle Le Grand, Sophie Gourguet, Florence Briton Maxime Jaunatre.","code":""},{"path":"/index.html","id":"support","dir":"","previous_headings":"","what":"Support","title":"Impact Assessment Model for fisheries management","text":"information help, don’t hesitate fill issue gitlab","code":""},{"path":"/reference/IAM.args-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"'iamArgs' objects creator by GUI — IAM.args-methods","title":"'iamArgs' objects creator by GUI — IAM.args-methods","text":"'iamArgs' objects creator GUI Etape d'initialisation Etape de modification Etape d'initialisation txt file.","code":""},{"path":"/reference/IAM.args-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'iamArgs' objects creator by GUI — IAM.args-methods","text":"","code":"IAM.args(object, specific, ...)  # S4 method for iamInput,missing IAM.args(object, desc = as.character(NA), ...)  # S4 method for iamArgs,missing IAM.args(object, desc = as.character(NA), ...)  # S4 method for character,character IAM.args(object, specific, desc = as.character(NA), ...)"},{"path":"/reference/IAM.args-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'iamArgs' objects creator by GUI — IAM.args-methods","text":"object iamInput-class iamArgs-class object. specific specific file, deprecated use function. ... desc parameter described . @return iamArgs-class object modification GUI. desc Object descriptor (default value : .character(NA)). provided, copied description slot object.","code":""},{"path":"/reference/IAM.args-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"'iamArgs' objects creator by GUI — IAM.args-methods","text":"","code":"if (FALSE) { data(IAM_input_2009) # example not run because depend on shiny app. # Initiate argument from input. IAM_argum_2009 <- IAM.args(IAM_input_2009) summary(IAM_argum_2009) # Modify argument from argument. IAM_argum_2009 <- IAM.args(IAM_argum_2009) summary(IAM_argum_2009) }"},{"path":"/reference/IAM.args_scenar.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Scenario arguments — IAM.args_scenar","title":"Get Scenario arguments — IAM.args_scenar","text":"Return scenario arguments.","code":""},{"path":"/reference/IAM.args_scenar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Scenario arguments — IAM.args_scenar","text":"","code":"IAM.args_scenar(object)  # S4 method for iamArgs IAM.args_scenar(object)"},{"path":"/reference/IAM.args_scenar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Scenario arguments — IAM.args_scenar","text":"object iamArgs-class object","code":""},{"path":"/reference/IAM.args_scenar.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get Scenario arguments — IAM.args_scenar","text":"Maxime Jaunatre","code":""},{"path":"/reference/IAM.args_scenar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Scenario arguments — IAM.args_scenar","text":"","code":"data(IAM_argum_2009) IAM.args_scenar(IAM_argum_2009) #> $active #> [1] 0 #>  #> $ALLscenario #> [1] \"Sc_saisine\" #>  #> $SELECTscen #> [1] 1 #>"},{"path":"/reference/IAM.dev.html","id":null,"dir":"Reference","previous_headings":"","what":"Initiate a project with files and directory — IAM.dev","title":"Initiate a project with files and directory — IAM.dev","text":"function can used create good practice environment usage IAM package.","code":""},{"path":"/reference/IAM.dev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initiate a project with files and directory — IAM.dev","text":"","code":"IAM.dev(project = \"Workgroup\", file = \"analysis.R\")"},{"path":"/reference/IAM.dev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initiate a project with files and directory — IAM.dev","text":"project Title project IAM used file Name analysis file initialised project. Used main script project. NULL cancel file creation.","code":""},{"path":"/reference/IAM.dev.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initiate a project with files and directory — IAM.dev","text":"R directory intended store R scripts functions. Use source(\"R/script.R\") load functions inside script. output directory intended store output created project. output can can deleted point obtained main script. data contains two directory raw processed dataset. Raw data modified code evaluation. Processed data can deleted point obtained main script. git repository created calling function, data/raw/ directory default added .gitignore file.","code":""},{"path":"/reference/IAM.dev.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Initiate a project with files and directory — IAM.dev","text":"Maxime Jaunatre","code":""},{"path":"/reference/IAM.editArgs_Eco.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify Economic arguments — IAM.editArgs_Eco","title":"Modify Economic arguments — IAM.editArgs_Eco","text":"Modify Economic arguments","code":""},{"path":"/reference/IAM.editArgs_Eco.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify Economic arguments — IAM.editArgs_Eco","text":"","code":"IAM.editArgs_Eco(object, ...)  # S4 method for iamArgs IAM.editArgs_Eco(object, dr = NULL, perscCalc = NULL)"},{"path":"/reference/IAM.editArgs_Eco.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify Economic arguments — IAM.editArgs_Eco","text":"object iamArgs-class object ... dr persCalc arguments dr actualisation rate : numeric value decimal (percentage. 4%, dr must 0.04) perscCalc personnel cost : computation mode 0 - constant variable 1 - linear relation rtbs; cshr available 2 - linear relation rtbs; cshr non available","code":""},{"path":"/reference/IAM.editArgs_Eco.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Modify Economic arguments — IAM.editArgs_Eco","text":"GUI provide many arguments economic parameters deprecated useless edit ","code":""},{"path":"/reference/IAM.editArgs_Eco.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Modify Economic arguments — IAM.editArgs_Eco","text":"Maxime Jaunatre","code":""},{"path":"/reference/IAM.editArgs_Eco.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify Economic arguments — IAM.editArgs_Eco","text":"","code":"data(IAM_argum_2009) IAM_argum_2009@arguments$Eco$dr #> [1] 0 IAM_argum_2009@arguments$Eco$perscCalc #> [1] 0 IAM_argum_2009 <- IAM.editArgs_Eco(IAM_argum_2009, dr = 0.06, perscCalc = 0) IAM_argum_2009@arguments$Eco$dr #> [1] 0.06 IAM_argum_2009@arguments$Eco$perscCalc #> [1] 0"},{"path":"/reference/IAM.editArgs_Gest.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify Gestion arguments — IAM.editArgs_Gest","title":"Modify Gestion arguments — IAM.editArgs_Gest","text":"Modify Gestion arguments","code":""},{"path":"/reference/IAM.editArgs_Gest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify Gestion arguments — IAM.editArgs_Gest","text":"","code":"IAM.editArgs_Gest(object, ...)  # S4 method for iamArgs IAM.editArgs_Gest(   object,   active = NULL,   control = NULL,   target = NULL,   espece = NULL,   delay = NULL,   type = NULL,   update = NULL,   bounds = NULL,   tac = NULL,   fbar = NULL,   effSup = NULL,   mfm = NULL )"},{"path":"/reference/IAM.editArgs_Gest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify Gestion arguments — IAM.editArgs_Gest","text":"object iamArgs-class object ... selected argument active Activation module. TRUE FALSE input, accept 1 0 values (numeric interpreted logical) control option choose management control effort reduction reducing number vessels number trips per vessels. target management aim reduce effort reach TAC Fbar, TAC Fbar. espece species target management. delay option delay management n years. delay larger year model, management effect. type option choose effort reduction additive (\"+\") multiplicative (\"x\"). update option choose effort reduction t0 t-1 iteration bounds bounds target reach model iteration. num length 2. tac TAC values model iteration. Can NA. fbar Fbar values model iteration. Can NA. effSup Maximum effort per fleet year. limit nbds. mfm Ponderation fleet/metier effort reduction.","code":""},{"path":"/reference/IAM.editArgs_Gest.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Modify Gestion arguments — IAM.editArgs_Gest","text":"Maxime Jaunatre","code":""},{"path":"/reference/IAM.editArgs_Gest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify Gestion arguments — IAM.editArgs_Gest","text":"","code":"data(IAM_argum_2009) IAM.args_scenar(IAM_argum_2009) #> $active #> [1] 0 #>  #> $ALLscenario #> [1] \"Sc_saisine\" #>  #> $SELECTscen #> [1] 1 #>   # Activate scenario \"Sc_saisine\" IAM_argum_2009 <- IAM.editArgs_Gest(IAM_argum_2009, active= TRUE) summary(IAM_argum_2009) #> My Input (IAM argument) : #> Simulation of 3 dynamic species, 19 static species and 7 fleet #> Simulation start in 2009 and end in 2020 (12 steps) #>  #> ======================================================================================= #>   SR module  |               Stock Recruitment             |      Noise       | Proba | #> --------------------------------------------------------------------------------------- #>     Species  |    function  :  param A ; param B ; param C |  Type :    sd    |  Type | #>    ARC (XSA) |          Mean 3.641e+07  0.00e+00  0.00e+00 |  Norm | 0.00e+00 |   .   | #>    COR (XSA) |          Mean 1.893e+07  0.00e+00  0.00e+00 |  Norm | 0.00e+00 |   .   | #>    DAR (SS3) | not activated 0.000e+00  0.00e+00  0.00e+00 |  Norm | 0.00e+00 |   .   | #> --------------------------------------------------------------------------------------- #>  #> ============================================================================= #>                      Gestion Module                                         |  #> ----------------------------------------------------------------------------- #>     Species  |   control  |    target | delay | typeG | update |   bounds   | #>    ARC (XSA) | Nb vessels |       TAC |    2  |   +   |   yes  |   0 :    0 | #> ----------------------------------------------------------------------------- #>    TAC : NA NA NA NA NA NA NA NA NA NA NA NA  #>   FBAR : NA NA NA NA NA NA NA NA NA NA NA NA  #> ---------------------------------------------------------------------------- #>  #> ============================================================ #> Economic : PerscCalc = 0 ; dr = 0.000 | No replicates      | #> ------------------------------------------------------------ #>  #>  The Scenario module is not active."},{"path":"/reference/IAM.editArgs_Rep.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify Replicates arguments — IAM.editArgs_Rep","title":"Modify Replicates arguments — IAM.editArgs_Rep","text":"Modify Replicates arguments","code":""},{"path":"/reference/IAM.editArgs_Rep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify Replicates arguments — IAM.editArgs_Rep","text":"","code":"IAM.editArgs_Rep(object, ...)  # S4 method for iamArgs IAM.editArgs_Rep(object, n = NULL)"},{"path":"/reference/IAM.editArgs_Rep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify Replicates arguments — IAM.editArgs_Rep","text":"object iamArgs-class object ... selected argument n Number replicates NULL desactivate Replicates module","code":""},{"path":"/reference/IAM.editArgs_Rep.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Modify Replicates arguments — IAM.editArgs_Rep","text":"Maxime Jaunatre","code":""},{"path":"/reference/IAM.editArgs_Rep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify Replicates arguments — IAM.editArgs_Rep","text":"","code":"data(IAM_argum_2009)  # Replicate 100 times IAM_argum_2009 <- IAM.editArgs_Rep(IAM_argum_2009, n = 100) IAM.args_scenar(IAM_argum_2009) #> $active #> [1] 0 #>  #> $ALLscenario #> [1] \"Sc_saisine\" #>  #> $SELECTscen #> [1] 1 #>   # Desactivate Replicates IAM_argum_2009 <- IAM.editArgs_Rep(IAM_argum_2009, n = NULL) IAM.args_scenar(IAM_argum_2009) #> $active #> [1] 0 #>  #> $ALLscenario #> [1] \"Sc_saisine\" #>  #> $SELECTscen #> [1] 1 #>"},{"path":"/reference/IAM.editArgs_Scenar.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify Scenario arguments — IAM.editArgs_Scenar","title":"Modify Scenario arguments — IAM.editArgs_Scenar","text":"Modify Scenario arguments","code":""},{"path":"/reference/IAM.editArgs_Scenar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify Scenario arguments — IAM.editArgs_Scenar","text":"","code":"IAM.editArgs_Scenar(object, ...)  # S4 method for iamArgs IAM.editArgs_Scenar(object, selected = NULL)"},{"path":"/reference/IAM.editArgs_Scenar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify Scenario arguments — IAM.editArgs_Scenar","text":"object iamArgs-class object ... selected argument selected name number scenario selected. NULL desactivate scenario module","code":""},{"path":"/reference/IAM.editArgs_Scenar.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Modify Scenario arguments — IAM.editArgs_Scenar","text":"Maxime Jaunatre","code":""},{"path":"/reference/IAM.editArgs_Scenar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify Scenario arguments — IAM.editArgs_Scenar","text":"","code":"data(IAM_argum_2009) IAM.args_scenar(IAM_argum_2009) #> $active #> [1] 0 #>  #> $ALLscenario #> [1] \"Sc_saisine\" #>  #> $SELECTscen #> [1] 1 #>   # Activate scenario \"Sc_saisine\" IAM_argum_2009 <- IAM.editArgs_Scenar(IAM_argum_2009, selected=\"Sc_saisine\") IAM.args_scenar(IAM_argum_2009) #> $active #> [1] 1 #>  #> $ALLscenario #> [1] \"Sc_saisine\" #>  #> $SELECTscen #> [1] 1 #>   # Desactivate scenario IAM_argum_2009 <- IAM.editArgs_Scenar(IAM_argum_2009, selected = NULL) IAM.args_scenar(IAM_argum_2009) #> $active #> [1] 0 #>  #> $ALLscenario #> [1] \"Sc_saisine\" #>  #> $SELECTscen #> [1] 1 #>   # Activate scenario \"Sc_saisine\" IAM_argum_2009 <- IAM.editArgs_Scenar(IAM_argum_2009, selected = 1) IAM.args_scenar(IAM_argum_2009) #> $active #> [1] 1 #>  #> $ALLscenario #> [1] \"Sc_saisine\" #>  #> $SELECTscen #> [1] 1 #>"},{"path":"/reference/IAM.export.html","id":null,"dir":"Reference","previous_headings":"","what":"Exporting IAM objects as readable .txt file — IAM.export","title":"Exporting IAM objects as readable .txt file — IAM.export","text":"Exporting IAM objects readable .txt file","code":""},{"path":"/reference/IAM.export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exporting IAM objects as readable .txt file — IAM.export","text":"","code":"IAM.export(object, folder, ...)  # S4 method for iamInput IAM.export(object, folder, ...)  # S4 method for iamArgs IAM.export(object, folder, ...)"},{"path":"/reference/IAM.export.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exporting IAM objects as readable .txt file — IAM.export","text":"object TODO folder folder output .txt files exported. Chr. ... deprecated argument ?","code":""},{"path":"/reference/IAM.export.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Exporting IAM objects as readable .txt file — IAM.export","text":"method export input object's slots .txt file generic name corresponding name slot (\"specific.txt\", \"input.txt\",\"scenario.txt\" & \"stochastic.txt\" iamInput object, \"specific.txt\" & \"args.txt\" iamArgs object.","code":""},{"path":"/reference/IAM.export.html","id":"warning-","dir":"Reference","previous_headings":"","what":"WARNING","title":"Exporting IAM objects as readable .txt file — IAM.export","text":"file name already folder, replaced exported file. , use caution!!","code":""},{"path":"/reference/IAM.format-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Format IAM.output variable as a tibble. — IAM.format-method","title":"Format IAM.output variable as a tibble. — IAM.format-method","text":"Extract element iamOutput-class format tibble. tibble 6 column wide specified format (see details)","code":""},{"path":"/reference/IAM.format-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format IAM.output variable as a tibble. — IAM.format-method","text":"","code":"IAM.format(object, name, sim_name = NA_character_, n = NA_real_)  # S4 method for iamOutput,character IAM.format(object, name, sim_name = NA_character_, n = NA_real_)  format_vareco(object, name, sim_name = NA_character_, n = NA_real_)  format_varsp(object, name, sim_name = NA_character_, n = NA_real_)"},{"path":"/reference/IAM.format-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format IAM.output variable as a tibble. — IAM.format-method","text":"object iamOutput-class object created IAM.model(). name names exported variable IAM. \"summary\" select variables usually displayed common scenarii (\"Fbar\", \"SSB\", \"L_et\", \"N\", \"nbv_f\", \"effort2_f\", \"GVLav_f\", \"gva_f\", \"gp_f\", \"wageg_f\", \"wagen_f\"). chr. sim_name Name simulation, used joining multiple scenarii iamOutput. NA default, chr. n Number simulation, used joining replicated iamOutput. NA default, dbl.","code":""},{"path":"/reference/IAM.format-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format IAM.output variable as a tibble. — IAM.format-method","text":"Format : long format ggplot dplyr analysis facilitate filter summary computations. variable defined specific dimension (column), column filled NA. sim_name Simulation name. chr. n Number simulation. dbl variable Single value repeated, needed multiple variables   assembled bind_row(). chr vector species Species names, can contain dynamic static species   depending variable selected.. chr vector fleet Fleet names. fct vector metier Metier names. fct vector age Ages dynamic species. fct vector year year step simulation. dbl vector value Value variable every column place indicated   row. dbl vector","code":""},{"path":"/reference/IAM.format-method.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format IAM.output variable as a tibble. — IAM.format-method","text":"reconcilSPP variable return character value, binded variable numeric.","code":""},{"path":"/reference/IAM.format-method.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Format IAM.output variable as a tibble. — IAM.format-method","text":"Maxime Jaunatre","code":""},{"path":"/reference/IAM.format-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format IAM.output variable as a tibble. — IAM.format-method","text":"","code":"data(\"IAM_input_2009\") data(\"IAM_argum_2009\") sim_statu_quo <- IAM::IAM.model(objArgs = IAM_argum_2009, objInput = IAM_input_2009)  #' cas vide return NULL IAM.format(sim_statu_quo, \"not a variable\") #> Warning: \"not a variable\" variable does not exist in an IAM output. #> NULL #' cas simple bio IAM.format(sim_statu_quo, \"SSB\") #> # A tibble: 36 × 9 #>    sim_name     n variable species fleet metier age    year  value #>    <chr>    <dbl> <chr>    <chr>   <chr> <chr>  <chr> <dbl>  <dbl> #>  1 NA          NA SSB      ARC     NA    NA     NA     2009 18723. #>  2 NA          NA SSB      ARC     NA    NA     NA     2010 17990. #>  3 NA          NA SSB      ARC     NA    NA     NA     2011 17220. #>  4 NA          NA SSB      ARC     NA    NA     NA     2012 16459. #>  5 NA          NA SSB      ARC     NA    NA     NA     2013 16194. #>  6 NA          NA SSB      ARC     NA    NA     NA     2014 16611. #>  7 NA          NA SSB      ARC     NA    NA     NA     2015 17817. #>  8 NA          NA SSB      ARC     NA    NA     NA     2016 19506. #>  9 NA          NA SSB      ARC     NA    NA     NA     2017 21242. #> 10 NA          NA SSB      ARC     NA    NA     NA     2018 22793. #> # … with 26 more rows #' cas complexe bio IAM.format(sim_statu_quo, \"F\") #> # A tibble: 40,656 × 9 #>    sim_name     n variable species fleet           metier    age    year value #>    <chr>    <dbl> <chr>    <chr>   <fct>           <fct>     <fct> <dbl> <dbl> #>  1 NA          NA F        ARC     Alis            Filet_DAR 0      2009     0 #>  2 NA          NA F        ARC     Antea           Filet_DAR 0      2009     0 #>  3 NA          NA F        ARC     Atalante        Filet_DAR 0      2009     0 #>  4 NA          NA F        ARC     Haliotis        Filet_DAR 0      2009     0 #>  5 NA          NA F        ARC     Marion_Dufresne Filet_DAR 0      2009     0 #>  6 NA          NA F        ARC     Pourquoi_pas    Filet_DAR 0      2009     0 #>  7 NA          NA F        ARC     Thalassa        Filet_DAR 0      2009     0 #>  8 NA          NA F        ARC     Alis            Filet_DP  0      2009     0 #>  9 NA          NA F        ARC     Antea           Filet_DP  0      2009     0 #> 10 NA          NA F        ARC     Atalante        Filet_DP  0      2009     0 #> # … with 40,646 more rows IAM.format(sim_statu_quo, \"N_S1M1\") #> # A tibble: 192 × 9 #>    sim_name     n variable species fleet metier age    year   value #>    <chr>    <dbl> <chr>    <chr>   <chr> <chr>  <fct> <dbl>   <dbl> #>  1 NA          NA N_S1M1   DAR     NA    NA     0      2009 137653  #>  2 NA          NA N_S1M1   DAR     NA    NA     1      2009  50556. #>  3 NA          NA N_S1M1   DAR     NA    NA     2      2009  21313. #>  4 NA          NA N_S1M1   DAR     NA    NA     3      2009  25389  #>  5 NA          NA N_S1M1   DAR     NA    NA     4      2009  15481. #>  6 NA          NA N_S1M1   DAR     NA    NA     5      2009   2399. #>  7 NA          NA N_S1M1   DAR     NA    NA     6      2009    875. #>  8 NA          NA N_S1M1   DAR     NA    NA     7      2009    624. #>  9 NA          NA N_S1M1   DAR     NA    NA     8      2009    731. #> 10 NA          NA N_S1M1   DAR     NA    NA     9      2009    119. #> # … with 182 more rows #' cat eco IAM.format(sim_statu_quo, name = \"ratio_gp_K_f\") #> # A tibble: 84 × 9 #>    sim_name     n variable     species fleet metier age    year  value #>    <chr>    <dbl> <chr>        <lgl>   <chr> <chr>  <chr> <dbl>  <dbl> #>  1 NA          NA ratio_gp_K_f NA      Alis  NA     NA     2009 -0.899 #>  2 NA          NA ratio_gp_K_f NA      Alis  NA     NA     2010 -0.899 #>  3 NA          NA ratio_gp_K_f NA      Alis  NA     NA     2011 -0.899 #>  4 NA          NA ratio_gp_K_f NA      Alis  NA     NA     2012 -0.899 #>  5 NA          NA ratio_gp_K_f NA      Alis  NA     NA     2013 -0.899 #>  6 NA          NA ratio_gp_K_f NA      Alis  NA     NA     2014 -0.899 #>  7 NA          NA ratio_gp_K_f NA      Alis  NA     NA     2015 -0.899 #>  8 NA          NA ratio_gp_K_f NA      Alis  NA     NA     2016 -0.899 #>  9 NA          NA ratio_gp_K_f NA      Alis  NA     NA     2017 -0.899 #> 10 NA          NA ratio_gp_K_f NA      Alis  NA     NA     2018 -0.899 #> # … with 74 more rows #' Warning here values are string ! IAM.format(sim_statu_quo, name = \"reconcilSPP\") #> Warning: reconcilSPP variable has character for value. This will cause problems if you need to rbind ouputs of IAM.format() #> # A tibble: 924 × 9 #>    sim_name     n variable    species fleet           metier   age    year value #>    <chr>    <dbl> <chr>       <lgl>   <fct>           <fct>    <chr> <dbl> <chr> #>  1 NA          NA reconcilSPP NA      Alis            Filet_D… NA        1 NA    #>  2 NA          NA reconcilSPP NA      Antea           Filet_D… NA        1 NA    #>  3 NA          NA reconcilSPP NA      Atalante        Filet_D… NA        1 NA    #>  4 NA          NA reconcilSPP NA      Haliotis        Filet_D… NA        1 NA    #>  5 NA          NA reconcilSPP NA      Marion_Dufresne Filet_D… NA        1 NA    #>  6 NA          NA reconcilSPP NA      Pourquoi_pas    Filet_D… NA        1 NA    #>  7 NA          NA reconcilSPP NA      Thalassa        Filet_D… NA        1 NA    #>  8 NA          NA reconcilSPP NA      Alis            Filet_DP NA        1 NA    #>  9 NA          NA reconcilSPP NA      Antea           Filet_DP NA        1 NA    #> 10 NA          NA reconcilSPP NA      Atalante        Filet_DP NA        1 NA    #> # … with 914 more rows"},{"path":"/reference/IAM.format_quant.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplify multiple simulations — IAM.format_quant","title":"Simplify multiple simulations — IAM.format_quant","text":"Simplify multiple simulations group computing quantile median value (per species, fleet, metier, age, year). selected simulation kept illustrate possible way.","code":""},{"path":"/reference/IAM.format_quant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplify multiple simulations — IAM.format_quant","text":"","code":"IAM.format_quant(var_format, probs = c(0.25, 0.75), select_indiv = 1)"},{"path":"/reference/IAM.format_quant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplify multiple simulations — IAM.format_quant","text":"var_format Tibble data.frame format produced IAM.format. probs Quantile arguments values distribution grouped. Vector 2 numeric values [0, 1]. select_indiv Single numeric value allow conserve single simulation value example. Default 1.","code":""},{"path":"/reference/IAM.format_quant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplify multiple simulations — IAM.format_quant","text":"Format : long format ggplot dplyr analysis facilitate filter summary computations. variable defined specific dimension (column), column filled NA. sim_name Simulation name. chr. variable Single value repeated, needed multiple variables   assembled bind_row(). chr vector species Species names, can contain dynamic static species   depending variable selected.. chr vector fleet Fleet names. fct vector metier Metier names. fct vector age Ages dynamic species. fct vector year year step simulation. dbl vector quant1 First quantile probs argument. quant2 Second quantile probs argument. median Median computed grouped values. value Value variable every column place indicated   row. dbl vector","code":""},{"path":"/reference/IAM.format_quant.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simplify multiple simulations — IAM.format_quant","text":"Maxime Jaunatre","code":""},{"path":"/reference/IAM.format_quant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simplify multiple simulations — IAM.format_quant","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union library(magrittr)  data(\"IAM_input_2009\") data(\"IAM_argum_2009\") sim_statu_quo <- IAM::IAM.model(objArgs = IAM_argum_2009, objInput = IAM_input_2009) res1 <- IAM.format(sim_statu_quo, c(\"SSB\"), n = 1) %>%   dplyr::filter(species == \"ARC\", year < 1987) res2 <- mutate(res1, n = 2, value = value + rnorm(1, sd = 100)) res <- rbind(res1, res2)  IAM.format_quant(res, c(0.025, 0.975), 2) #> Error in IAM.format_quant(res, c(0.025, 0.975), 2): Simulation number must be provided for this function. Please check IAM.format() usage."},{"path":"/reference/IAM.html","id":null,"dir":"Reference","previous_headings":"","what":"Impact Assesment Model — IAM","title":"Impact Assesment Model — IAM","text":"IAM (Impact Assessment Model) bio-economic model simulation fisheries dynamics, integrating specific decision support tools within framework theoretical implementation management measures discrete time, multi-fleet, multi-trade, multi-species annual bio-economic model \"age\" components biological part, \"commercial category\" components economic part.","code":""},{"path":"/reference/IAM.input-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"'iamInput' objects creator — IAM.input-methods","title":"'iamInput' objects creator — IAM.input-methods","text":"'iamInput' objects creator","code":""},{"path":"/reference/IAM.input-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'iamInput' objects creator — IAM.input-methods","text":"","code":"IAM.input(fileIN, fileSPEC, fileSCEN, fileSTOCH, ...)  # S4 method for character,missing,missing,missing IAM.input(   fileIN,   t_init,   nbStep = 20,   t_hist_max = t_init,   desc = \"My Input\",   folderFleet = NULL,   Fq_i = NULL,   iniFq_i = NULL,   Fq_fmi = NULL,   iniFq_fmi = NULL,   FqLwt_i = NULL,   iniFqLwt_i = NULL,   FqLwt_fmi = NULL,   iniFqLwt_fmi = NULL,   FqDwt_i = NULL,   iniFqDwt_i = NULL,   FqDwt_fmi = NULL,   iniFqDwt_fmi = NULL,   Nt0s1q = NULL,   Ni0q = NULL,   iniNt0q = NULL,   matwt = NULL,   Fg_fmi = NULL,   dg_fmi = NULL,   verbose = FALSE,   ... )  # S4 method for character,character,missing,missing IAM.input(fileIN, fileSPEC, desc = \"My Input\", ...)  # S4 method for character,character,character,missing IAM.input(fileIN, fileSPEC, fileSCEN, desc = \"My Input\", ...)  # S4 method for character,character,missing,character IAM.input(fileIN, fileSPEC, fileSTOCH, desc = \"My Input\", ...)  # S4 method for character,character,character,character IAM.input(fileIN, fileSPEC, fileSCEN, fileSTOCH, desc = \"My Input\", ...)"},{"path":"/reference/IAM.input-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'iamInput' objects creator — IAM.input-methods","text":"fileIN .xls standard IAM input file fileSPEC deprecated argument. fileSCEN deprecated argument. fileSTOCH deprecated argument. ... arguments used input .xls. Described . t_init first signature. Initial year. nbStep first signature. Number timesteps (including initial year). t_hist_max first signature. Last year considered 'historical' slot. desc Object descriptor (default value : \"Input\"). folderFleet Folder containing fleets input sheets (Optionnal. Default value : NULL). Fq_i List containing SS3 parameters arrays quarterly stock dynamic simulation. One element per considered species, names must match input species. Fishing mortality per season, morph, age. (Optionnal. Default value : NULL. Example : list(hake=array(...,dim=c(4,4,nAge))). Fq_fmi See . Fishing mortality per season, morph, fleet, \"economic\" metiers age (Optionnal. Default value : NULL). Ni0q See . Recruits numbers per season (Optionnal. Default value : NULL).","code":""},{"path":"/reference/IAM.input2args.html","id":null,"dir":"Reference","previous_headings":"","what":"'iamArgs' objects creator by code — IAM.input2args","title":"'iamArgs' objects creator by code — IAM.input2args","text":"'iamArgs' objects creator code","code":""},{"path":"/reference/IAM.input2args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'iamArgs' objects creator by code — IAM.input2args","text":"","code":"IAM.input2args(object, ...)  # S4 method for iamInput IAM.input2args(object, desc = NULL)"},{"path":"/reference/IAM.input2args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'iamArgs' objects creator by code — IAM.input2args","text":"object iamInput-class iamArgs-class object. ... desc argument desc Object descriptor (default value : .character(NA)). provided, copied description slot object.","code":""},{"path":"/reference/IAM.model-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Running an IAM simulation. — IAM.model-methods","title":"Running an IAM simulation. — IAM.model-methods","text":"Running IAM simulation.","code":""},{"path":"/reference/IAM.model-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Running an IAM simulation. — IAM.model-methods","text":"","code":"IAM.model(objArgs, objInput, ...)  # S4 method for iamArgs,iamInput IAM.model(   objArgs,   objInput,   desc = as.character(NA),   mOTH = 0,   updateE = 0,   TACbyF = NULL,   TACtot = NULL,   Ftarg = NULL,   W_Ftarg = NULL,   MeanRec_Ftarg = NULL,   TACbyFoptimCTRL = list(maxIter = as.integer(7), diffZmax = 1e-04, lambda = 0.9,     t_stop = 0),   recList = list(),   recParamList = list(),   ParamSPMList = list(),   parBehav = list(active = as.integer(0), type = as.integer(3), FMT = NULL, MU = NULL,     MUpos = as.integer(0), ALPHA = NULL),   parOptQuot = list(active = as.integer(0), pxQuIni = NULL, pxQuMin = NULL, pxQuMax =     NULL, lambda = 0.1, sdmax = 0, ftol = 1e-07, itmax = 500),   tacControl = list(tolVarTACinf = NA, tolVarTACsup = NA, corVarTACval = NA,     corVarTACnby = 2, Blim = NA, Bmax = NA, BlimTrigger = as.integer(0), typeMng = NA),   stochPrice = list(),   parOQD = list(activeQR = as.integer(0), listQR = NULL, listQR_f = NULL),   verbose = FALSE,   force_t = NULL,   ... )"},{"path":"/reference/IAM.model-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Running an IAM simulation. — IAM.model-methods","text":"objArgs output IAM.args-methods objInput output IAM.input-methods ... much arg.... # TODO verbose Show messages follow process. Mainly used debug process.","code":""},{"path":"/reference/IAM.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting functions for IAM package based on lattice methods — IAM.bwplot","title":"Plotting functions for IAM package based on lattice methods — IAM.bwplot","text":"Plotting functions IAM package based lattice methods","code":""},{"path":"/reference/IAM.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting functions for IAM package based on lattice methods — IAM.bwplot","text":"","code":"IAM.bwplot(formula, data, ...)  IAM.zone(formula, data, ...)  IAM.barIC(formula, data, ...)  IAM.barplot(formula, data, ...)  IAM.plot(formula, data, ...)"},{"path":"/reference/IAM.plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting functions for IAM package based on lattice methods — IAM.bwplot","text":"formula Typical 'Lattice' formula. 'groups' parameter, multiple terms separated 'plus' sign required grouping (cf Extended formula interface part 'xyplot' documentation) data data frame containing values variables formula (example, IAM.unite output) ... graphical parameters (see details)","code":""},{"path":"/reference/IAM.plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plotting functions for IAM package based on lattice methods — IAM.bwplot","text":"Graphical parameters used : type Character pch Numeric cex.pch Numeric lty Numeric lwd Numeric relation Character key Logical pch.leg Numeric pchSize.leg Numeric lty.leg Numeric lwd.leg Numeric txt.leg Character font.leg Numeric cex.leg Numeric space Character alpha Numeric add.v Numeric add.h Numeric add.lwd Numeric add.lty Numeric add.col Character cex.lab.x Numeric cex.lab.y Numeric font.lab.x Numeric font.lab.y Numeric cex.axis.x Numeric cex.axis.y Numeric font.axis.x Numeric font.axis.y Numeric rot.x Numeric rot.y Numeric cex.strip Numeric font.strip Numeric col.strip Character col Character fill Character xlab Character ylab Character origin Numeric .table Logical","code":""},{"path":"/reference/IAM.unite.html","id":null,"dir":"Reference","previous_headings":"","what":"Formating method for grouping various iamOutput-class or iamOutputRep-class objects — IAM.unite","title":"Formating method for grouping various iamOutput-class or iamOutputRep-class objects — IAM.unite","text":"Formating method grouping various iamOutput-class iamOutputRep-class objects","code":""},{"path":"/reference/IAM.unite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formating method for grouping various iamOutput-class or iamOutputRep-class objects — IAM.unite","text":"","code":"IAM.unite(listObj, ...)  # S4 method for list IAM.unite(listObj, ...)"},{"path":"/reference/IAM.unite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Formating method for grouping various iamOutput-class or iamOutputRep-class objects — IAM.unite","text":"listObj list containing iamOutput-class iamOutputRep-class objects. Mixed lists allowed. ... arguments : elmt Name operating variable. chr. spp Name considered species (relevant variables). chr agg Index(es) describing dimensions agregation must done, referring 'DimCst' attributes (1=fleet, 2=metier, 3=age/category, 4=time). num. headers Optionnal. Dimension developped headers output data.frame. chr. subs optionnal 'subset' argument operate final subsetting output dataframe. logic","code":""},{"path":"/reference/IAM_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete IAM dataset — IAM_dataset","title":"Complete IAM dataset — IAM_dataset","text":"Dataset anonymised, 7 fleets 3 dynamic species, one SS3 dynamic. Time begin 2009 end 2020","code":""},{"path":"/reference/IAM_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete IAM dataset — IAM_dataset","text":"","code":"IAM_input_2009  IAM_argum_2009"},{"path":"/reference/IAM_dataset.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Complete IAM dataset — IAM_dataset","text":"Two different part parameter IAM.model simulation : IAM_input_2009 - iamInput-class object.  Created .xlsx file. See Details. IAM_argum_2009 - iamArgs-class object.  Created input, modify Recruitment, Gestion  Economic parameters object class iamArgs length 1.","code":""},{"path":"/reference/IAM_dataset.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Complete IAM dataset — IAM_dataset","text":"Based Florence Briton dataset.","code":""},{"path":"/reference/IAM_dataset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Complete IAM dataset — IAM_dataset","text":"dataset created IAM.input-methods function. function load .xlsx file, require t_init nbStep. SS3 species included .xlsx file, additionnal data must provided.","code":""},{"path":"/reference/IAM_dataset.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Complete IAM dataset — IAM_dataset","text":"Jaunatre Maxime <maxime.jaunatre@yahoo.fr>","code":""},{"path":"/reference/IAM_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Complete IAM dataset — IAM_dataset","text":"","code":"if (FALSE) {  # Code used to create this object from raw .xlsx file. More information in vignette. load(IAM_example(\"IAM_SS3_2009.RData\")) IAM_input_2009 <- IAM::IAM.input(   fileIN = IAM_example(\"inputFile.xlsx\"),   t_init = 2009, nbStep = 12, folderFleet = IAM_example(\"fleets\"),   Fq_i = list(DAR = iniFq_i), iniFq_i = list(DAR = iniFq_i),   Fq_fmi = list(DAR = iniFq_fmi), iniFq_fmi = list(DAR = iniFq_fmi),   FqLwt_i = list(DAR = iniFqLwt_i),iniFqLwt_i = list(DAR = iniFqLwt_i),   FqLwt_fmi = list(DAR = iniFqLwt_fmi), iniFqLwt_fmi = list(DAR = iniFqLwt_fmi),   FqDwt_i = list(DAR = iniFqDwt_i), iniFqDwt_i = list(DAR = iniFqDwt_i),   FqDwt_fmi = list(DAR = iniFqDwt_fmi), iniFqDwt_fmi = list(DAR = iniFqDwt_fmi),   Nt0s1q = list(DAR = Nt0s1q), Ni0q = list(DAR = Ni0q),   iniNt0q = list(DAR = iniNt0q), matwt = list(DAR = mat_morphage) )  IAM_argum_2009 <- IAM.input2args(IAM_input_2009) IAM_argum_2009@arguments$Eco$dr <- 0.04 IAM_argum_2009@arguments$Eco$perscCalc <- as.integer(1) }  data(IAM_input_2009) data(IAM_argum_2009)"},{"path":"/reference/IAM_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Path to the IAM extdata files — IAM_example","title":"Path to the IAM extdata files — IAM_example","text":"Allorw get paths package installation location extdata files.","code":""},{"path":"/reference/IAM_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Path to the IAM extdata files — IAM_example","text":"","code":"IAM_example(file)"},{"path":"/reference/IAM_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Path to the IAM extdata files — IAM_example","text":"file Name file. Need inst/extdata/ directory package","code":""},{"path":"/reference/IAM_example.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Path to the IAM extdata files — IAM_example","text":"simplified system readr package.","code":""},{"path":"/reference/IAM_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Path to the IAM extdata files — IAM_example","text":"","code":"IAM_example(\"IAM_SS3_2009.RData\") #> [1] \"/home/runner/work/_temp/Library/IAM/extdata/IAM_SS3_2009.RData\" IAM_example(\"inputFile.xlsx\") #> [1] \"/home/runner/work/_temp/Library/IAM/extdata/inputFile.xlsx\" IAM_example(\"fleets\") #> [1] \"/home/runner/work/_temp/Library/IAM/extdata/fleets\""},{"path":"/reference/IAM_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme for IAM plots — IAM_theme","title":"Theme for IAM plots — IAM_theme","text":"Modify background IAM plots.","code":""},{"path":"/reference/IAM_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme for IAM plots — IAM_theme","text":"","code":"IAM_theme()"},{"path":"/reference/IAM_theme.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Theme for IAM plots — IAM_theme","text":"maxime jaunate","code":""},{"path":"/reference/app_dev.html","id":null,"dir":"Reference","previous_headings":"","what":"return `TRUE` if in `devloppment mode` — app_dev","title":"return `TRUE` if in `devloppment mode` — app_dev","text":"ThinkR style","code":""},{"path":"/reference/app_dev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"return `TRUE` if in `devloppment mode` — app_dev","text":"","code":"app_dev()"},{"path":"/reference/convertInput.html","id":null,"dir":"Reference","previous_headings":"","what":"convertInput — convertInput","title":"convertInput — convertInput","text":"Fonction de ventilation du jeu de donnee","code":""},{"path":"/reference/convertInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convertInput — convertInput","text":"","code":"convertInput(inp, Fq_fmi = NULL, Fg_fmi = NULL, verbose = FALSE)"},{"path":"/reference/convertInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convertInput — convertInput","text":"inp # TODO Fq_fmi # TODO Fg_fmi # TODO verbose TRUE print information function process. Implemented debug purpose .","code":""},{"path":"/reference/fleetInput-class.html","id":null,"dir":"Reference","previous_headings":"","what":"fleetInput class — fleetInput-class","title":"fleetInput class — fleetInput-class","text":"# TODO","code":""},{"path":"/reference/fleetInput-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"fleetInput class — fleetInput-class","text":"Used reformat function. # TODO find extent","code":""},{"path":"/reference/fleetInput-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"fleetInput class — fleetInput-class","text":"stock # TODO descr input # TODO descr","code":""},{"path":"/reference/iamArgs-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Class \"iamArgs\"","code":""},{"path":"/reference/iamArgs-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class ","text":"Used IAM.Args method use shiny package GUI.","code":""},{"path":"/reference/iamArgs-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"desc Copy desc slot iamInput-class arguments Arguments set GUI window. Recruitment Parameters dynamic XSA species. Equation parameters recruitment. Replicates Deprecated. Parameters replication. Module activation, number replicates et output variables selected. Scenario Scenario selection. Module activation, list scenario selected scenario. Gestion Gestion module activation. Multiple parameters select target species,   gestion control (nbv, nbds), bounds gestion, gestion TAC, Fleet etc.   way deprecation since TACbyF directly implemented IAM.model function. Eco Economic module, partially deprecated. perscCalc dr (discount rate) used. specific Copy specific slot iamInput-class","code":""},{"path":"/reference/iamArgs-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class ","text":"Mathieu Merzereaud","code":""},{"path":"/reference/iamArgs-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class ","text":"","code":"showClass(\"iamArgs\") #> Class \"iamArgs\" [package \"IAM\"] #>  #> Slots: #>                                      #> Name:       desc arguments  specific #> Class: character      list      list"},{"path":"/reference/iamInput-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"# TODO","code":""},{"path":"/reference/iamInput-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class ","text":"iamInput class methods defined creation new object, usage iamArgs initiation IAM.Model.","code":""},{"path":"/reference/iamInput-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"desc Short description object. chr. specific structural dimension Species Stock vector 3 letter abreviation species name sotck number. chr vector StaticSpp Static species. ones landed included dynamic structure.   information extracted Fleet sheet. chr vector AllSpp stocks names concatenated Species StaticSpp. chr vector Fleet Fleet types, defined thanks vessel length, area times. vesserl can multiple Metier. chr vector Metier Typology depending fishing gear, vessel length, area times fisheries. chr vector MetiersEco Economic metier, depending fishing gear. chr vector Ages Ages structure dynamic species. List chr vector Cat Economic type dynamic species. List chr vector t_init Initial year model. int NbSteps Number years model used. Initial year included step 0. int vector times Years used model. Defined t_init NbSteps Q Status species. 0 mean XSA dynamic 1 mean SS3 dynamic S Status species. 0 mean XSA dynamic 1 mean SEX dynamic. species SS3 SEX. historical # TODO descr juste pour les graphes.pas utilise dans le modele C++ input # TODO descr scenario List scenarii containing one element per species one supplementary element Fleets. # TODO explain Fleet element ? # TODO describe format species element stochastic # TODO description possible med style input. optimization # TODO description possible med style input.","code":""},{"path":"/reference/iamInput-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class ","text":"Mathieu Merzereaud","code":""},{"path":"/reference/iamInput-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class ","text":"","code":"showClass(\"iamInput\") #> Class \"iamInput\" [package \"IAM\"] #>  #> Slots: #>                                                                         #> Name:          desc     specific   historical        input     scenario #> Class:    character         list         list         list         list #>                                  #> Name:    stochastic optimization #> Class:         list         list"},{"path":"/reference/iamOutput-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Class \"iamOutput\"","code":""},{"path":"/reference/iamOutput-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"desc Copy desc slot iamInput-class arguments Copy arguments slot iamArgs-class specific Copy specific slot iamInput-class outputSp # TODO output # TODO","code":""},{"path":"/reference/iamOutput-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class ","text":"Mathieu Merzereaud","code":""},{"path":"/reference/iamOutput-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class ","text":"","code":"showClass(\"iamOutput\") #> Class \"iamOutput\" [package \"IAM\"] #>  #> Slots: #>                                                          #> Name:       desc arguments  specific  outputSp    output #> Class: character      list      list      list      list"},{"path":"/reference/iamOutputRep-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Class \"iamOutputRep\"","code":""},{"path":"/reference/iamOutputRep-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"desc Copy desc slot iamInput-class arguments Copy arguments slot iamArgs-class specific Copy specific slot iamInput-class outputSp # TODO output # TODO","code":""},{"path":"/reference/iamOutputRep-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class ","text":"Mathieu Merzereaud","code":""},{"path":"/reference/iamOutputRep-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class ","text":"","code":"showClass(\"iamOutputRep\") #> Class \"iamOutputRep\" [package \"IAM\"] #>  #> Slots: #>                                                          #> Name:       desc arguments  specific  outputSp    output #> Class: character      list      list      list      list"},{"path":"/reference/init_listHisto.html","id":null,"dir":"Reference","previous_headings":"","what":"init_listHisto — init_listHisto","title":"init_listHisto — init_listHisto","text":"initialise list Historique list Input specific stock","code":""},{"path":"/reference/init_listHisto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"init_listHisto — init_listHisto","text":"","code":"init_listHisto(List, t_init, t_hist_max, nbStep)"},{"path":"/reference/init_listHisto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"init_listHisto — init_listHisto","text":"List result table filtered t_init Initial time simulation t_hist_max first time modelisation nbStep number step modelisation","code":""},{"path":"/reference/marketInput-class.html","id":null,"dir":"Reference","previous_headings":"","what":"marketInput Class — marketInput-class","title":"marketInput Class — marketInput-class","text":"# TODO","code":""},{"path":"/reference/marketInput-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"marketInput Class — marketInput-class","text":"Used reformat function. # TODO find extent","code":""},{"path":"/reference/marketInput-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"marketInput Class — marketInput-class","text":"input # TODO descr","code":""},{"path":"/reference/read.Pflex.html","id":null,"dir":"Reference","previous_headings":"","what":"read.Pflex — read.Pflex","title":"read.Pflex — read.Pflex","text":"Function import Price_flexibility sheet input file.","code":""},{"path":"/reference/read.Pflex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read.Pflex — read.Pflex","text":"","code":"read.Pflex(file, nam_stock, nam_stock_bis)"},{"path":"/reference/read.Pflex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read.Pflex — read.Pflex","text":"file excell file (.xlsx) imported IAM.input. Must contain Price_flexibility sheet.Character string. nam_stock vector character string stock names. Format \"Stock__X\", X abreviation precise stock. nam_stock_bis # TODO format # TODO add example file.","code":""},{"path":"/reference/read.Pflex.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"read.Pflex — read.Pflex","text":"Florence Briton 05/2019","code":""},{"path":"/reference/read.Scenar.html","id":null,"dir":"Reference","previous_headings":"","what":"read.Scenarii — read.Scenar","title":"read.Scenarii — read.Scenar","text":"read.Scenarii","code":""},{"path":"/reference/read.Scenar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read.Scenarii — read.Scenar","text":"","code":"read.Scenar(file)"},{"path":"/reference/read.Scenar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read.Scenarii — read.Scenar","text":"file excell file (.xlsx) imported IAM.input. Must contain Scenarii sheet.Character string.","code":""},{"path":"/reference/read.sheet.html","id":null,"dir":"Reference","previous_headings":"","what":"read.sheet — read.sheet","title":"read.sheet — read.sheet","text":"Import sheet excell file.","code":""},{"path":"/reference/read.sheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read.sheet — read.sheet","text":"","code":"read.sheet(file, sheet)"},{"path":"/reference/read.sheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read.sheet — read.sheet","text":"file excell file (.xlsx) imported IAM.input. Must contain sheet named second parameter.Character string. sheet sheet name inside file imported IAM.input. Character string.","code":""},{"path":"/reference/read.sheet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"read.sheet — read.sheet","text":"Replace \",\" \".\" columns character. Replace NA values empty string (\"\")","code":""},{"path":"/reference/result_filtre.html","id":null,"dir":"Reference","previous_headings":"","what":"Reapeated code that I don't understand yet — result_filtre","title":"Reapeated code that I don't understand yet — result_filtre","text":"Idea DRY (Repeat )","code":""},{"path":"/reference/result_filtre.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reapeated code that I don't understand yet — result_filtre","text":"","code":"result_filtre(result, indEmpt)"},{"path":"/reference/result_filtre.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reapeated code that I don't understand yet — result_filtre","text":"result readed sheet file, modified indEmpt something need understand # TODO","code":""},{"path":"/reference/staticStockInput-class.html","id":null,"dir":"Reference","previous_headings":"","what":"staticStockInput Class — staticStockInput-class","title":"staticStockInput Class — staticStockInput-class","text":"# TODO","code":""},{"path":"/reference/staticStockInput-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"staticStockInput Class — staticStockInput-class","text":"Used reformat function. # TODO find extent","code":""},{"path":"/reference/staticStockInput-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"staticStockInput Class — staticStockInput-class","text":"stock # TODO descr input # TODO descr","code":""},{"path":"/reference/stockInput-class.html","id":null,"dir":"Reference","previous_headings":"","what":"stockInput Class — stockInput-class","title":"stockInput Class — stockInput-class","text":"# TODO descr","code":""},{"path":"/reference/stockInput-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"stockInput Class — stockInput-class","text":"Used reformat function. # TODO find extent","code":""},{"path":"/reference/stockInput-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"stockInput Class — stockInput-class","text":"stock # TODO descr input # TODO descr","code":""},{"path":"/reference/summary-iamArgs-method.html","id":null,"dir":"Reference","previous_headings":"","what":"summary method for iamInput class — summary,iamArgs-method","title":"summary method for iamInput class — summary,iamArgs-method","text":"summary method iamInput class","code":""},{"path":"/reference/summary-iamArgs-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary method for iamInput class — summary,iamArgs-method","text":"","code":"# S4 method for iamArgs summary(object, ...)"},{"path":"/reference/summary-iamArgs-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary method for iamInput class — summary,iamArgs-method","text":"object iamArgs-class object ... Unused argument","code":""},{"path":"/reference/summary-iamArgs-method.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"summary method for iamInput class — summary,iamArgs-method","text":"GUI provide many arguments economic parameters deprecated useless show ","code":""},{"path":"/reference/summary-iamArgs-method.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"summary method for iamInput class — summary,iamArgs-method","text":"Maxime Jaunatre","code":""},{"path":"/reference/summary-iamArgs-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"summary method for iamInput class — summary,iamArgs-method","text":"","code":"data(\"IAM_argum_2009\") IAM_argum_2009@arguments$Gestion$active <- 1 IAM_argum_2009@arguments$Replicates$active <- 1 IAM_argum_2009@arguments$Scenario$ALLscenario <- c(\"Scenario1\", \"Scenario2\") IAM_argum_2009 <- IAM.editArgs_Scenar(IAM_argum_2009, selected = 1) summary(IAM_argum_2009) #> My Input (IAM argument) : #> Simulation of 3 dynamic species, 19 static species and 7 fleet #> Simulation start in 2009 and end in 2020 (12 steps) #>  #> ======================================================================================= #>   SR module  |               Stock Recruitment             |      Noise       | Proba | #> --------------------------------------------------------------------------------------- #>     Species  |    function  :  param A ; param B ; param C |  Type :    sd    |  Type | #>    ARC (XSA) |          Mean 3.641e+07  0.00e+00  0.00e+00 |  Norm | 0.00e+00 |   .   | #>    COR (XSA) |          Mean 1.893e+07  0.00e+00  0.00e+00 |  Norm | 0.00e+00 |   .   | #>    DAR (SS3) | not activated 0.000e+00  0.00e+00  0.00e+00 |  Norm | 0.00e+00 |   .   | #> --------------------------------------------------------------------------------------- #>  #> ============================================================================= #>                      Gestion Module                                         |  #> ----------------------------------------------------------------------------- #>     Species  |   control  |    target | delay | typeG | update |   bounds   | #>    ARC (XSA) | Nb vessels |       TAC |    2  |   +   |   yes  |   0 :    0 | #> ----------------------------------------------------------------------------- #>    TAC : NA NA NA NA NA NA NA NA NA NA NA NA  #>   FBAR : NA NA NA NA NA NA NA NA NA NA NA NA  #> ---------------------------------------------------------------------------- #>  #> ============================================================ #> Economic : PerscCalc = 0 ; dr = 0.000 | Replicates :   500 | #> ------------------------------------------------------------ #>  #> ------------------------ #>  Scenario (selected:*) | #>            Scenario1 * | #>            Scenario2   | #> ------------------------"},{"path":"/reference/summary-iamInput-method.html","id":null,"dir":"Reference","previous_headings":"","what":"summary method for iamInput class — summary,iamInput-method","title":"summary method for iamInput class — summary,iamInput-method","text":"summary method iamInput class","code":""},{"path":"/reference/summary-iamInput-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary method for iamInput class — summary,iamInput-method","text":"","code":"# S4 method for iamInput summary(object, ...)"},{"path":"/reference/summary-iamInput-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary method for iamInput class — summary,iamInput-method","text":"object iamInput-class object ... Unused argument","code":""},{"path":"/reference/summary-iamInput-method.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"summary method for iamInput class — summary,iamInput-method","text":"Maxime Jaunatre","code":""},{"path":"/reference/summary-iamInput-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"summary method for iamInput class — summary,iamInput-method","text":"","code":"data(\"IAM_input_2009\") summary(IAM_input_2009) #> My Input (IAM input) : #> Simulation of 3 dynamic species, 19 static species and 7 fleet #> Simulation start in 2009 and end in 2020 (12 steps) #>  #> ------------------------------------ #> Dynamic Species | Model |     Ages | #>             ARC |   XSA | 0 to +gp | #>             COR |   XSA | 2 to +gp | #>             DAR |   SS3 | 0 to +gp | #> ------------------------------------ #>                   Fleet |    nbv   | #>                    Alis |    24    | #>                   Antea |    36    | #>                Atalante |    15    | #>                Haliotis |     5    | #>         Marion_Dufresne |     9    | #>            Pourquoi_pas |    18    | #>                Thalassa |    60    |"},{"path":"/reference/val.iamArgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Checking validity of iamArgs Class — val.iamArgs","title":"Checking validity of iamArgs Class — val.iamArgs","text":"Checking validity iamArgs Class","code":""},{"path":"/reference/val.iamArgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checking validity of iamArgs Class — val.iamArgs","text":"","code":"val.iamArgs(object)"},{"path":"/reference/val.iamArgs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checking validity of iamArgs Class — val.iamArgs","text":"object iamArgs-class object","code":""},{"path":"/news/index.html","id":"iam-200","dir":"Changelog","previous_headings":"","what":"IAM 2.0.0","title":"IAM 2.0.0","text":"Added NEWS.md file track changes package.","code":""},{"path":"/news/index.html","id":"breaking-change-2-0-0","dir":"Changelog","previous_headings":"","what":"Breaking change","title":"IAM 2.0.0","text":"IAM.format totally modified inf argument computation.","code":""},{"path":"/news/index.html","id":"code-modifications-2-0-0","dir":"Changelog","previous_headings":"","what":"Code modifications","title":"IAM 2.0.0","text":"Price flexibility extracted function activated input excell file contain price flexibility sheet. Replaced Gestion module suppresssion. Removed deprecated arguments iamInput iamArgs.","code":""},{"path":"/news/index.html","id":"license-2-0-0","dir":"Changelog","previous_headings":"","what":"License","title":"IAM 2.0.0","text":"GPL-2 CeCILL-2","code":""},{"path":"/news/index.html","id":"organisation-2-0-0","dir":"Changelog","previous_headings":"","what":"Organisation","title":"IAM 2.0.0","text":"Added git repository track every change Added NEWS.md file track changes package.","code":""},{"path":"/news/index.html","id":"iam-140","dir":"Changelog","previous_headings":"","what":"IAM 1.4.0","title":"IAM 1.4.0","text":"Prior versions IAM specially developped project usage hardly succeed .","code":""}]
